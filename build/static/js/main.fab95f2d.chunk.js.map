{"version":3,"sources":["contexts/geral.jsx","services/api.js","contexts/auth-estabelecimento.jsx","contexts/auth-funcionario.jsx","components/Loading.jsx","pages/LoginEstabelecimento/index.jsx","pages/CadastroEstabelecimento/index.jsx","components/Header.jsx","pages/PainelEstabelecimento/components/Menu.jsx","components/Footer.jsx","pages/PainelEstabelecimento/components/Content.jsx","pages/PainelEstabelecimento/index.jsx","pages/PainelEstabelecimento/pages/GerenciarFuncionarios/ListaFuncionarios.jsx","pages/PainelEstabelecimento/pages/GerenciarFuncionarios/index.jsx","pages/PainelEstabelecimento/pages/GerenciarMesas/ListaMesas.jsx","pages/PainelEstabelecimento/pages/GerenciarMesas/index.jsx","pages/PainelEstabelecimento/pages/GerenciarCardapio/ModalCadCardapio.jsx","pages/PainelEstabelecimento/pages/GerenciarCardapio/ModalVisualizar.jsx","pages/PainelEstabelecimento/pages/GerenciarCardapio/ListaCardapio.jsx","pages/PainelEstabelecimento/pages/GerenciarCardapio/index.jsx","pages/PainelEstabelecimento/pages/GerenciarPromocoes/index.jsx","pages/PainelEstabelecimento/pages/GerenciarCozinha/components/CardPedido.jsx","pages/PainelEstabelecimento/pages/GerenciarCozinha/components/CozinhaContent.jsx","pages/PainelEstabelecimento/pages/GerenciarCozinha/index.jsx","routes/app.routes.jsx","routes/funcionario.routes.jsx","routes/index.jsx","App.js","index.js","assets/logo.png"],"names":["GeralContext","createContext","GeralProvider","children","useState","tipoUsuario","setTipoUsuario","isLoadingVisible","setLoadingVisible","useEffect","storagedTipoUsuario","localStorage","getItem","loadStoragedData","Provider","value","api","axios","create","baseURL","timeout","AuthContext","AuthEstabelecimentoProvider","estabelecimento","setEstabelecimento","useContext","credentials","a","payload","cnpj","senha","post","response","accessToken","data","setItem","JSON","stringify","storagedEstabelecimento","storagedToken","parse","signedEstabelecimento","signIn","signOut","clear","AuthFuncionarioProvider","funcionario","setFuncionario","telefone","storagedFuncionario","signedFuncionario","setEstabelecimentoFuncionario","Loading","className","name","fadeIn","color","LoginEstabelecimento","valores","setValores","AuthEstabelecimentoContext","history","useHistory","useForm","register","handleSubmit","errors","handleChange","event","target","status","push","Swal","fire","title","text","icon","confirmButtonText","href","autoComplete","onSubmit","loginEstabelecimento","type","placeholder","onChange","mask","ref","required","message","pattern","CadastroEstabelecimento","tiposEstabelecimento","setTiposEstabelecimento","watch","resposta","nome","endereco","numero","latitude","longitude","tipoEstabelecimento","get","tipoestabelecimento","console","log","err","getTiposEstabelecimento","cadastrarEstabelecimento","maxLength","key","map","index","id","descricao","repeticaoSenha","validate","aceitaTermos","defaultChecked","defaultValue","htmlFor","data-toggle","data-target","style","display","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","Header","data-widget","Menu","src","logo","alt","opacity","data-accordion","onClick","Footer","Content","PainelEstabelecimento","ListaFuncionarios","funcionarios","setFuncionarios","tiposFuncionario","setTiposFuncionario","getFuncionarios","id_Estabelecimento","getUsuario","cpf","cadastrarFuncionario","idUsuario","idTipoFuncionario","mixin","input","showCancelButton","progressSteps","inputValidator","Promise","resolve","queue","inputPlaceholder","then","result","pesquisaUsuario","html","inputOptions","item","confirmButtonColor","cancelButtonColor","delete","id_funcionario","getTiposFuncionario","width","disabled","deletarFuncionario","GerenciarFuncionarios","ListaMesas","mesas","setMesas","getMesas","put","alterarMesas","deletarMesas","GerenciarMesas","initialState","titulo","valor","categoria","tempoEstimadoMin","tempoEstimadoMax","imagem","isCozinha","isCardapio","ModalCadCardapio","props","categorias","setCategorias","getCategorias","handleClose","setShowModal","idEstabelecimento","dados","FormData","append","headers","atualizarItens","Modal","show","showModal","onHide","size","centered","closeButton","Title","cadastrarItem","Body","prefix","decimalSeparator","thousandSeparator","onChangeEvent","maskedValue","floatValue","valorItemCardapio","accept","e","files","currencyFormatter","Intl","NumberFormat","currency","Image","fluid","tempo_estimado_min","tempo_estimado_max","format","showModalVisualizar","setModalVisualizar","itemSelecionado","setItemSelecionado","cardapio","setCardapio","getCardapio","codigo_item","rows","obj","objIndex","itens","itemIndex","handleVisualizar","deletarItem","ItensCardapio","GerenciarCardapio","GerenciarPromocoes","CardPedido","mesa","numeroPedido","linha","produto","quantidade","porcao","fontSize","backgroundColor","atendente","tempoEspera","listaPedidos","CozinhaContent","pedido","GerenciarCozinha","PrivateRoute","Component","component","rest","render","to","AppRoutes","path","exact","Routes","App","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fab95f2d.chunk.js","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\n\nconst GeralContext = createContext();\n\nexport const GeralProvider = ({ children }) => {\n    const [tipoUsuario, setTipoUsuario] = useState(null);\n    const [isLoadingVisible, setLoadingVisible] = useState(false);\n\n    useEffect(() => {\n        function loadStoragedData() {\n            const storagedTipoUsuario = localStorage.getItem('@TBAuth:tipoUsuario');\n\n            if (storagedTipoUsuario) {\n                setTipoUsuario(storagedTipoUsuario);\n            }\n        }\n\n        loadStoragedData();\n    }, []);\n\n    return (\n        <GeralContext.Provider value={{ tipoUsuario, setTipoUsuario, isLoadingVisible, setLoadingVisible }}>\n            {children}\n        </GeralContext.Provider>\n    )\n};\n\nexport default GeralContext;","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: `http://52.45.128.89/api`,\n    timeout: 7000\n});\n\nexport default api;","import React, { useState, useContext, createContext, useEffect } from 'react';\n\nimport api from '../services/api';\nimport GeralContext from './geral';\n\nconst AuthContext = createContext();\n\nexport const AuthEstabelecimentoProvider = ({ children }) => {\n    const [estabelecimento, setEstabelecimento] = useState(null);\n    const { setTipoUsuario } = useContext(GeralContext);\n\n    useEffect(() => {\n        function loadStoragedData() {\n            const storagedEstabelecimento = localStorage.getItem('@TBAuth:estabelecimento');\n            const storagedToken = localStorage.getItem('@TBAuth:token');\n\n            if (storagedEstabelecimento && storagedToken) {\n                setEstabelecimento(JSON.parse(storagedEstabelecimento));\n            }\n        }\n\n        loadStoragedData();\n    }, []);\n\n    async function signIn(credentials) {\n        try {\n            const payload = {\n                \"Cnpj\": credentials.cnpj,\n                \"Senha\": credentials.senha\n            }\n\n            const response = await api.post('/loginestabelecimento', payload);\n\n            const { accessToken } = response.data;\n            delete response.data.accessToken;\n\n            setEstabelecimento(response.data);\n            localStorage.setItem('@TBAuth:estabelecimento', JSON.stringify(response.data));\n            localStorage.setItem('@TBAuth:token', accessToken);\n            localStorage.setItem('@TBAuth:tipoUsuario', 'estabelecimento');\n\n            return response;\n        } catch (err) {\n            return err.response;\n        }\n    }\n\n    function signOut() {\n        localStorage.clear();\n        setTipoUsuario(null);\n        setEstabelecimento(null);\n    }\n\n    return (\n        <AuthContext.Provider value={{ signedEstabelecimento: !!estabelecimento, estabelecimento, signIn, signOut }}>\n            {children}\n        </AuthContext.Provider>\n    )\n};\n\nexport default AuthContext;","import React, { useState, useContext, createContext, useEffect } from 'react';\n\nimport api from '../services/api';\nimport GeralContext from './geral';\n\nconst AuthContext = createContext();\n\nexport const AuthFuncionarioProvider = ({ children }) => {\n    const [funcionario, setFuncionario] = useState(null);\n    const [estabelecimento, setEstabelecimento] = useState(null);\n    const { setTipoUsuario } = useContext(GeralContext);\n\n    useEffect(() => {\n        function loadStoragedData() {\n            const storagedFuncionario = localStorage.getItem('@TBAuth:funcionario');\n            const storagedToken = localStorage.getItem('@TBAuth:token');\n            const storagedEstabelecimento = localStorage.getItem('@TBAuth:estabelecimento');\n\n            if (storagedFuncionario && storagedToken && storagedEstabelecimento) {\n                setFuncionario(JSON.parse(storagedFuncionario));\n            }\n        }\n\n        loadStoragedData();\n    }, []);\n\n    async function signIn(credentials) {\n        try {\n            const payload = {\n                \"Telefone\": credentials.telefone,\n                \"Senha\": credentials.senha\n            }\n\n            const response = await api.post('/loginfuncionario', payload);\n\n            const { accessToken } = response.data;\n            delete response.data.accessToken;\n\n            setFuncionario(response.data);\n            localStorage.setItem('@TBAuth:funcionario', JSON.stringify(response.data));\n            localStorage.setItem('@TBAuth:token', accessToken);\n            localStorage.setItem('@TBAuth:tipoUsuario', 'funcionario');\n\n            return response;\n        } catch (err) {\n            return err.response;\n        }\n    }\n\n    function signOut() {\n        localStorage.clear();\n        setTipoUsuario(null);\n        setFuncionario(null);\n    }\n\n    function setEstabelecimentoFuncionario(data) {\n        setEstabelecimento(data);\n        localStorage.setItem('@TBAuth:estabelecimento', JSON.stringify(data));\n    }\n\n    return (\n        <AuthContext.Provider value={{ signedFuncionario: !!funcionario, funcionario, signIn, signOut, estabelecimento, setEstabelecimentoFuncionario }}>\n            {children}\n        </AuthContext.Provider>\n    )\n};\n\nexport default AuthContext;","import React from 'react';\nimport Spinner from 'react-spinkit';\n\nimport '../styles/Loading.css';\n\nexport default function Loading() {\n    return (\n        <div className=\"loading-modal\">\n            <Spinner\n                name='pacman'\n                fadeIn='none'\n                color='white'\n            />\n        </div>\n    );\n}","import React, { useState, useEffect, useContext } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport Swal from 'sweetalert2';\nimport InputMask from 'react-input-mask';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthEstabelecimentoContext from '../../contexts/auth-estabelecimento';\nimport Loading from '../../components/Loading';\n\nexport default function LoginEstabelecimento() {\n    const [valores, setValores] = useState({});\n    const [isLoadingVisible, setLoadingVisible] = useState(false);\n    const { signIn } = useContext(AuthEstabelecimentoContext);\n\n    const history = useHistory();\n    const { register, handleSubmit, errors } = useForm();\n\n    useEffect(() => { }, [isLoadingVisible]);\n\n    const onSubmit = data => {\n        setValores(data);\n        loginEstabelecimento(data);\n    };\n\n    function handleChange(event) {\n        const { name, value } = event.target;\n        setValores({ ...valores, [name]: value });\n    }\n\n    async function loginEstabelecimento(credentials) {\n        setLoadingVisible(true);\n\n        const response = await signIn(credentials);\n\n        if (response.status === 200 || response.status === 201) {\n            history.push('/painelEstabelecimento');\n\n        } else if (response.status === 401) {\n            Swal.fire({\n                title: 'Erro!',\n                text: 'Usuário ou senha inválidos',\n                icon: 'error',\n                confirmButtonText: 'Voltar'\n            });\n        } else {\n            Swal.fire({\n                title: 'Erro!',\n                text: 'Falha ao efetuar login.',\n                icon: 'error',\n                confirmButtonText: 'Voltar'\n            });\n        }\n\n        setLoadingVisible(false);\n    }\n\n    return (\n        <div className=\"hold-transition login-page\">\n            <div className=\"login-box\">\n                <div className=\"login-logo\">\n                    <a href=\"../../index2.html\"><b>Tingle</b>Bar</a>\n                </div>\n                {/* /.login-logo */}\n                <div className=\"card\">\n                    <div className=\"card-body login-card-body\">\n                        <p className=\"login-box-msg\">Login de Estabelecimento</p>\n\n                        <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n\n                            <div className=\"input-group mb-3\">\n                                <InputMask\n                                    type=\"text\"\n                                    className={errors.cnpj ? \"form-control is-invalid\" : \"form-control\"}\n                                    placeholder=\"CNPJ\"\n                                    name=\"cnpj\"\n                                    onChange={handleChange}\n                                    mask=\"99.999.999/9999-99\"\n                                    ref={register({\n                                        required: {\n                                            value: \"Required\",\n                                            message: \"O CNPJ é obrigatório\"\n                                        },\n                                        pattern: {\n                                            value: /^\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}-\\d{2}$/,\n                                            message: \"CNPJ inválido\"\n                                        }\n                                    })}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-user\" />\n                                    </div>\n                                </div>\n                                <span className=\"error invalid-feedback\">{errors.cnpj && errors.cnpj.message}</span>\n                            </div>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    type=\"password\"\n                                    className={errors.senha ? \"form-control is-invalid\" : \"form-control\"}\n                                    placeholder=\"Senha\"\n                                    name=\"senha\"\n                                    onChange={handleChange}\n                                    ref={register({\n                                        required: {\n                                            value: \"Required\",\n                                            message: \"A senha é obrigatória\"\n                                        },\n                                        pattern: {\n                                            value: /(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, // Mínimo de oito caracteres, pelo menos uma letra e um número\n                                            message: \"Mínimo de oito caracteres, com pelo menos uma letra e um número\"\n                                        }\n                                    })}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-lock\" />\n                                    </div>\n                                </div>\n                                <span className=\"error invalid-feedback\">{errors.senha && errors.senha.message}</span>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"input-group mb-3 col-md-12\">\n                                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Acessar</button>\n                                </div>\n                                {/* /.col */}\n                            </div>\n                        </form>\n\n                        <p className=\"mb-1\">\n                            <a href=\"forgot-password.html\">Esqueci minha senha</a>\n                        </p>\n                        <p className=\"mb-0\">\n                            <a href=\"/cadastroEstabelecimento\" className=\"text-center\">Cadastrar um novo estabelecimento</a>\n                        </p>\n                    </div>\n                    {/* /.login-card-body */}\n                </div>\n            </div>\n            {/* /.login-box */}\n\n            {isLoadingVisible ? <Loading /> : null}\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport Swal from 'sweetalert2';\nimport InputMask from 'react-input-mask';\n\nimport './CadastroEstabelecimento.css';\nimport Loading from '../../components/Loading';\n\nimport api from '../../services/api';\n\nexport default function CadastroEstabelecimento() {\n    const [valores, setValores] = useState({});\n    const [tiposEstabelecimento, setTiposEstabelecimento] = useState([]);\n    const [isLoadingVisible, setLoadingVisible] = useState(false);\n\n    const { register, handleSubmit, errors, watch } = useForm();\n\n    const onSubmit = data => {\n        setValores(data);\n        console.log(valores);\n        cadastrarEstabelecimento();\n    };\n\n    useEffect(() => { }, [isLoadingVisible]);\n\n    useEffect(() => {\n        async function getTiposEstabelecimento() {\n            try {\n                const { data } = await api.get('/tipoestabelecimento');\n                setTiposEstabelecimento(data.tipoestabelecimento);\n            } catch (err) {\n                console.log({ err });\n            }\n        }\n\n        getTiposEstabelecimento();\n    }, []);\n\n    function handleChange(event) {\n        const { name, value } = event.target;\n        setValores({ ...valores, [name]: value });\n    }\n\n    async function cadastrarEstabelecimento() {\n        setLoadingVisible(true);\n        let resposta = null;\n\n        const payload = {\n            \"Nome\": valores.nome,\n            \"Cnpj\": valores.cnpj,\n            \"Endereco\": valores.endereco,\n            \"Numero\": valores.numero,\n            \"Latitude\": valores.latitude,\n            \"Longitude\": valores.longitude,\n            \"IdTipoEstabelecimento\": valores.tipoEstabelecimento,\n            \"Imagem\": \"/uploads/default.png\",\n            \"Distancia_km\": \"0\",\n            \"Senha\": valores.senha\n        }\n\n        try {\n            resposta = await api.post('/estabelecimento', payload);\n\n            if (resposta.status === 200 || resposta.status === 201) {\n                Swal.fire({\n                    title: 'Sucesso!',\n                    text: 'Cadastro efetuado com sucesso!',\n                    icon: 'success',\n                    confirmButtonText: 'OK'\n                });\n\n                setValores({});\n            }\n\n        } catch (err) {\n            Swal.fire({\n                title: 'Erro!',\n                text: 'Falha ao efetuar cadastro.',\n                icon: 'error',\n                confirmButtonText: 'Voltar'\n            });\n        } finally {\n            setLoadingVisible(false);\n        }\n    }\n\n    return (\n        <div className=\"hold-transition register-page\">\n            <div className=\"register-box\">\n                <div className=\"register-logo\">\n                    <a href=\"../../index2.html\"><b>Tingle</b>Bar</a>\n                </div>\n\n                <div className=\"card\">\n                    <div className=\"card-body register-card-body\">\n                        <p className=\"login-box-msg\">Cadastrar novo estabelecimento</p>\n\n                        <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n\n                            <div className=\"row\">\n                                <div className=\"mb-3 col-md-12\">\n                                    <input\n                                        name=\"nome\"\n                                        placeholder=\"Nome do estabelecimento\"\n                                        className={errors.nome ? \"form-control is-invalid\" : \"form-control\"}\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        ref={register({\n                                            required: {\n                                                value: \"Required\",\n                                                message: \"O nome do estabelecimento é obrigatório\"\n                                            },\n                                        })}\n                                    />\n                                    <span className=\"error invalid-feedback\">{errors.nome && errors.nome.message}</span>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"mb-3 col-md-10\">\n                                    <input\n                                        name=\"endereco\"\n                                        placeholder=\"Endereço\"\n                                        className={errors.endereco ? \"form-control is-invalid\" : \"form-control\"}\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        ref={register({\n                                            required: {\n                                                value: \"Required\",\n                                                message: \"O endereço é obrigatório\"\n                                            }\n                                        })}\n                                    />\n                                    <span className=\"error invalid-feedback\">{errors.endereco && errors.endereco.message}</span>\n                                </div>\n                                <div className=\"mb-3 col-md-2\">\n                                    <input\n                                        name=\"numero\"\n                                        placeholder=\"Nº\"\n                                        className={errors.numero ? \"form-control is-invalid\" : \"form-control\"}\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        ref={register({\n                                            required: {\n                                                value: \"Required\",\n                                                message: \"O número é obrigatório\"\n                                            },\n                                            maxLength: {\n                                                value: 5,\n                                                message: \"Limite de 5 caracteres\"\n                                            }\n                                        })}\n                                    />\n                                    <span className=\"error invalid-feedback\">{errors.numero && errors.numero.message}</span>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"mb-3 col-md-12\">\n                                    <InputMask\n                                        type=\"text\"\n                                        placeholder=\"CNPJ\"\n                                        className={errors.cnpj ? \"form-control is-invalid\" : \"form-control\"}\n                                        name=\"cnpj\"\n                                        onChange={handleChange}\n                                        mask=\"99.999.999/9999-99\"\n                                        ref={register({\n                                            required: {\n                                                value: \"Required\",\n                                                message: \"O CNPJ é obrigatório\"\n                                            },\n                                            pattern: {\n                                                value: /^\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}-\\d{2}$/,\n                                                message: \"CNPJ inválido\"\n                                            }\n                                        })}\n                                    />\n                                    <span className=\"error invalid-feedback\">{errors.cnpj && errors.cnpj.message}</span>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"mb-3 col-md-12\">\n                                    <select\n                                        className={errors.tipoEstabelecimento ? \"form-control is-invalid\" : \"form-control\"}\n                                        onChange={handleChange}\n                                        name=\"tipoEstabelecimento\"\n                                        ref={register({\n                                            required: {\n                                                value: \"Required\",\n                                                message: \"O tipo de estabelecimento é obrigatório\"\n                                            },\n                                        })}\n                                    >\n                                        <option key={0} value={\"\"}>Tipo de estabelecimento</option>\n\n                                        {tiposEstabelecimento.map((tipoEstabelecimento, index) => (\n                                            <option key={tipoEstabelecimento.id} value={tipoEstabelecimento.id}>{tipoEstabelecimento.descricao}</option>\n                                        ))}\n                                    </select>\n                                    <span className=\"error invalid-feedback\">{errors.tipoEstabelecimento && errors.tipoEstabelecimento.message}</span>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"mb-3 col-md-6\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        placeholder=\"Latitude\"\n                                        name=\"latitude\"\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div className=\"mb-3 col-md-6\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        placeholder=\"Longitude\"\n                                        name=\"longitude\"\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"mb-3 col-md-12\">\n                                    <input\n                                        type=\"password\"\n                                        className={errors.senha ? \"form-control is-invalid\" : \"form-control\"}\n                                        placeholder=\"Senha\"\n                                        name=\"senha\"\n                                        onChange={handleChange}\n                                        ref={register({\n                                            required: {\n                                                value: \"Required\",\n                                                message: \"A senha é obrigatória\"\n                                            },\n                                            pattern: {\n                                                value: /(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, // Mínimo de oito caracteres, pelo menos uma letra e um número\n                                                message: \"Mínimo de oito caracteres, com pelo menos uma letra e um número\"\n                                            }\n                                        })}\n                                    />\n                                    <span className=\"error invalid-feedback\">{errors.senha && errors.senha.message}</span>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"mb-3 col-md-12\">\n                                    <input\n                                        type=\"password\"\n                                        className={errors.repeticaoSenha ? \"form-control is-invalid\" : \"form-control\"}\n                                        placeholder=\"Redigite a senha\"\n                                        name=\"repeticaoSenha\"\n                                        onChange={handleChange}\n                                        ref={register({\n                                            required: {\n                                                value: \"Required\",\n                                                message: \"A repetição de senha é obrigatória\"\n                                            },\n                                            validate: value => value === watch('senha') || \"As senhas não coincidem\"\n                                        })}\n                                    />\n                                    <span className=\"error invalid-feedback\">{errors.repeticaoSenha && errors.repeticaoSenha.message}</span>\n                                </div>\n                            </div>\n\n                            <div className=\"row mb-3\">\n                                <div className=\"col-12\">\n                                    <div className=\"icheck-primary\">\n                                        <input\n                                            className={errors.aceitaTermos ? \"\" : \"\"}\n                                            type=\"checkbox\"\n                                            defaultChecked={false}\n                                            name=\"aceitaTermos\"\n                                            defaultValue\n                                            ref={register({\n                                                required: {\n                                                    value: \"Required\",\n                                                    message: \"Aceite os termos para continuar\"\n                                                },\n                                            })}\n                                        />\n                                        <label htmlFor=\"agreeTerms\">\n                                            &nbsp;&nbsp;Eu aceito todos os <a data-toggle=\"modal\" data-target=\"#modaltermo\" href=\"#\">termos de uso</a>\n                                        </label>\n                                        <span className=\"error invalid-feedback\" style={{ display: \"inline\" }}><br />{errors.aceitaTermos && errors.aceitaTermos.message}</span>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"mb-2 col-12\">\n                                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Cadastrar</button>\n                                </div>\n                            </div>\n\n                        </form>\n\n                        <a href=\"/\" className=\"text-center\">Já tenho uma conta de acesso</a>\n                    </div>\n                    {/* /.form-box */}\n                </div>{/* /.card */}\n            </div>\n            {/* /.register-box */}\n\n\n            <div className=\"modal fade\" id=\"modaltermo\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Termo de Uso</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            A política de privacidade é o documento por meio do qual a pessoa física ou jurídica que mantém um site ou aplicativo expõe e explica a todos os interessados a forma como os dados pessoais dos usuários da plataforma serão tratados.\n                            A proteção de dados pessoais ganhou especial relevância após a entrada em vigor do Regulamento Geral de Proteção de Dados da União Europeia (RGPD), também conhecido como General Data Protection Regulation (GDPR), que é o regulamento adotado pelos países da União Europeia sobre o assunto. Esta norma estabeleceu uma série de exigências e de punições àqueles que realizam o tratamento de dados pessoais de usuários da internet.\n                            A adoção do RGPD pela União Europeia levou o Brasil a adotar uma legislação muito semelhante, que também trata do assunto: a Lei Federal n. 13.709 (Lei de Proteção de Dados Pessoais).\n                            Vale ressaltar, neste ponto, que, ainda que a pessoa física ou jurídica responsável pelo site ou aplicativo seja brasileira, é possível que se lhe apliquem ambas as normas, a depender do caso.\n                            As duas normas estabelecem regras que devem ser seguidas pelos sites ou aplicativos que fazem a coleta e o tratamento de dados pessoais de seus usuários. Além disso, os usuários deverão ter seus direitos respeitados, como os de acesso, limitação, eliminação, retificação e portabilidade de seus dados pessoais.\n                            O site ou aplicativo deverá informar os motivos pelos quais os dados pessoais de seus usuários são coletados, a pessoa responsável pelo tratamento destes dados e o prazo pelo qual são armazenados. Caberá ao site ou aplicativo, ainda, informar aos usuários os seus direitos, sendo que todas estas informações estarão previstas na política de privacidade.\n                            No documento, será necessário, ainda, designar um profissional especializado em privacidade para verificar se o site ou aplicativo está cumprindo as normas do regulamento, o chamado Encarregado de Proteção de Dados (Data Protection Officer).\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Fechar</button>\n                            <button type=\"button\" className=\"btn btn-primary\">Aceito</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {isLoadingVisible ? <Loading /> : null}\n        </div>\n    );\n}","import React from 'react';\n\nexport default function Header() {\n    return (\n        <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <a className=\"nav-link\" data-widget=\"pushmenu\" href=\"#\" role=\"button\"><i className=\"fas fa-bars\" /></a>\n                </li>\n                {/* <li className=\"nav-item d-none d-sm-inline-block\">\n                    <a href=\"#\" className=\"nav-link\">Home</a>\n                </li> */}\n            </ul>\n\n        </nav>\n    )\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthEstabelecimentoContext from '../../../contexts/auth-estabelecimento';\n\nimport '../../../styles/Menu.css';\nimport logo from '../../../assets/logo.png';\n\nexport default function Menu() {\n    const { signOut } = useContext(AuthEstabelecimentoContext);\n    const history = useHistory();\n\n    function handleLogout() {\n        signOut();\n        history.push('/');\n    }\n\n    return (\n        <aside className=\"menu-content main-sidebar sidebar-dark-primary elevation-4\">\n            {/* Brand Logo */}\n            <a href=\"#\" className=\"brand-link logo\">\n                <img src={logo} alt=\"Equatorial Logo\" className=\"img-logo\" style={{ opacity: '.8' }} />\n            </a>\n            {/* Sidebar */}\n            <div className=\"sidebar\">\n                {/* Sidebar user panel (optional) */}\n                <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\n                    <div className=\"info\">\n                        <a href=\"#\" className=\"d-block\"><strong></strong></a>\n                        <a href=\"#\" className=\"d-block\">CNPJ: <strong></strong></a>\n                    </div>\n                </div>\n                {/* Sidebar Menu */}\n                <nav className=\"mt-2\">\n\n                    <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\n\n                        <li className=\"nav-item\">\n                            <a href=\"/gerenciarFuncionarios\" className=\"nav-link\">\n                                <i className=\"fas fa-users nav-icon\"></i>\n                                <p>Funcionários</p>\n                            </a>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <a href=\"/gerenciarMesas\" className=\"nav-link\">\n                                <i className=\"fas fa-table nav-icon\" />\n                                <p>Mesas</p>\n                            </a>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <a href=\"/gerenciarCardapio\" className=\"nav-link\">\n                                <i className=\"fas fa-bars nav-icon\"></i>\n                                <p>Cardápio</p>\n                            </a>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <a href=\"/gerenciarPromocoes\" className=\"nav-link\">\n                                <i className=\"fas fa-percentage nav-icon\"></i>\n                                <p>Promoções</p>\n                            </a>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <a href=\"/gerenciarCozinha\" className=\"nav-link\">\n                                <i className=\"fas fa-hamburger nav-icon\"></i>\n                                <p>Cozinha</p>\n                            </a>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <a onClick={handleLogout} className=\"nav-link\">\n                                <i className=\"fas fa-sign-out-alt nav-icon\"></i>\n                                <p className=\"text\" color=\"red\">Sair</p>\n                            </a>\n                        </li>\n\n                    </ul>\n                </nav>\n                {/* /.sidebar-menu */}\n            </div>\n            {/* /.sidebar */}\n        </aside>\n    );\n}\n","import React from 'react';\n\nexport default function Footer() {\n    return (\n        <footer className=\"main-footer\">\n            <strong>Copyright © 2020\n                <a href=\"https://www.equatorialenergia.com.br/\" target=\"_blank\"> TingleERP</a>.\n            </strong> Todos os direitos reservados.\n            <div className=\"float-right d-none d-sm-inline-block\">\n                <b>Versão</b> 0.0.1\n            </div>\n        </footer>\n    );\n}\n","import React from 'react';\n\nimport CadFuncionario from './CadFuncionario';\n\nexport default function Content() {\n    return (\n        <div className=\"content-wrapper\">\n\n            {/* Content Header (Page header) */}\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>Tela principal</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\n                                <li className=\"breadcrumb-item active\">Principal</li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>{/* /.container-fluid */}\n            </section>\n\n            {/* Main content */}\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n\n\n\n                </div>\n            </section>\n            {/* /.content */}\n\n        </div>\n    );\n}\n","import React from 'react';\n\nimport Header from '../../components/Header';\nimport Menu from './components/Menu';\nimport Footer from '../../components/Footer';\nimport Content from './components/Content';\n\n\nexport default function PainelEstabelecimento() {\n    return (\n        <div>\n            <Header />\n            <Menu />\n            <Content />\n            <Footer />\n        </div>\n    );\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport Swal from 'sweetalert2';\n\nimport AuthEstabelecimentoContext from '../../../../contexts/auth-estabelecimento';\nimport GeralContext from '../../../../contexts/geral';\n\nimport api from '../../../../services/api';\nimport Loading from '../../../../components/Loading';\n\nexport default function ListaFuncionarios() {\n    const [funcionarios, setFuncionarios] = useState([]);\n    const [estabelecimento, setEstabelecimento] = useState([]);\n    const [tiposFuncionario, setTiposFuncionario] = useState([]);\n    const { isLoadingVisible, setLoadingVisible } = useContext(GeralContext);\n\n    useEffect(() => {\n        async function loadStoragedData() {\n            const storagedEstabelecimento = localStorage.getItem('@TBAuth:estabelecimento');\n\n            if (storagedEstabelecimento) {\n                setEstabelecimento(JSON.parse(storagedEstabelecimento));\n            }\n        }\n\n        loadStoragedData();\n        getTiposFuncionario();\n    }, []);\n\n    useEffect(() => {\n        getFuncionarios();\n    }, [estabelecimento]);\n\n    async function getFuncionarios() {\n        try {\n            const response = await api.get('/Funcionario?idEstabelecimento=' + estabelecimento.id_Estabelecimento);\n            setFuncionarios(response.data);\n            return response.data;\n        } catch (err) {\n            return err.response;\n        }\n    }\n\n    async function getTiposFuncionario() {\n        try {\n            const response = await api.get('/tipofuncionario');\n            setTiposFuncionario(response.data);\n            return response.data;\n        } catch (err) {\n            return err.response;\n        }\n    }\n\n    async function getUsuario(cpf) {\n        try {\n            const response = await api.get('/usuario/GetByCpf?Cpf=' + cpf);\n            return response.data;\n        } catch (err) {\n            return err.response;\n        }\n    }\n\n    async function cadastrarFuncionario(idUsuario, idTipoFuncionario) {\n        const payload = {\n            \"id_usuario\": idUsuario,\n            \"id_estabelecimento\": estabelecimento.id_Estabelecimento,\n            \"id_tipofuncionario\": idTipoFuncionario\n        }\n\n        try {\n            const response = await api.post('/Funcionario', payload);\n\n            if (response.status === 201 || response.status === 200) {\n                Swal.fire('Sucesso!', 'Funcionário cadastrado com sucesso!', 'success');\n                getFuncionarios();\n            }\n\n        } catch (err) {\n            if (err.response.status === 401 || err.response.status === 400) {\n                Swal.fire('Erro!', 'Falha ao cadastrar o funcionário', 'error')\n            }\n        }\n    }\n\n    async function handleCadastrar() {\n        Swal.mixin({\n            input: 'text',\n            confirmButtonText: 'Pesquisar',\n            showCancelButton: true,\n            progressSteps: ['1'],\n            inputValidator: value => {\n                return new Promise(resolve => {\n                    if (value) {\n                        resolve()\n                    } else {\n                        resolve('CPF inválido');\n                    }\n                });\n            }\n        }).queue([\n            {\n                title: 'Pesquisar Usuário',\n                text: 'Digite o CPF',\n                input: 'text',\n                inputPlaceholder: \"000.000.000-00\",\n            }\n        ]).then(async result => {\n            if (result.value) {\n                try {\n                    const cpf = (result.value[0])\n                    const pesquisaUsuario = await getUsuario(cpf);\n\n                    if (pesquisaUsuario.cpf) {\n                        const { value } = Swal.fire({\n                            title: 'Cadastrar Funcionário',\n                            html: `Nome: ${pesquisaUsuario.nome}\n                                    <pre>cpf: ${pesquisaUsuario.cpf}</pre>`,\n                            input: 'select',\n                            inputOptions: tiposFuncionario.map(item => item.descricao),\n                            inputPlaceholder: 'Selecione a função',\n                            confirmButtonText: 'Cadastrar',\n                            showCancelButton: true,\n                            inputValidator: (value) => {\n                                return new Promise((resolve) => {\n                                    if (value)\n                                        resolve()\n                                    else\n                                        resolve('Você precisa selecionar uma função');\n                                });\n                            }\n                        }).then(result => {\n                            const idTipoFuncionario = tiposFuncionario[result.value].id;\n                            cadastrarFuncionario(pesquisaUsuario.id, idTipoFuncionario);\n                        });\n                    } else {\n                        Swal.fire('CPF não localizado', 'Tente novamente', 'error');\n                    }\n                } catch (err) {\n                    Swal.fire('CPF não localizado', 'Tente novamente', 'error');\n                }\n            }\n        });\n    }\n\n    async function deletarFuncionario(item) {\n        Swal.fire({\n            title: 'Deseja deletar o funcionário?',\n            text: \"Após deletar não será possivel recuperar!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#d33',\n            cancelButtonColor: '#3085d6',\n            confirmButtonText: 'Deletar'\n        }).then(async result => {\n            if (result.value) {\n                try {\n                    const response = await api.delete('/Funcionario/' + item.id_funcionario);\n\n                    if (response.status === 201 || response.status === 200) {\n                        Swal.fire('Sucesso!', 'Funcionário deletado com sucesso!', 'success');\n                        getFuncionarios();\n                    }\n                } catch (err) {\n                    if (err.response.status === 401 || err.response.status === 400) {\n                        Swal.fire('Erro!', 'Falha ao deletar o funcionário', 'error');\n                    }\n                }\n            }\n        })\n    }\n\n    return (\n        <div className=\"content-wrapper\">\n\n            {/* Content Header (Page header) */}\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>Funcionários</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\n                                <li className=\"breadcrumb-item active\">Funcionários</li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>{/* /.container-fluid */}\n            </section>\n\n            {/* Main content */}\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h3 className=\"card-title\">Lista de funcionários</h3>\n                            <div className=\"card-tools\">\n                                <button className=\"btn btn-success btn-sm\" onClick={handleCadastrar}>\n                                    <i className=\"fas fa-user-plus mr-2\"></i>\n                                                    Novo\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"card-body p-0\">\n                            <table className=\"table table-striped projects\">\n                                <thead>\n                                    <tr>\n                                        <th style={{ width: '10%' }}>\n                                            ID\n                                        </th>\n                                        <th style={{ width: '40%' }}>\n                                            Nome\n                                        </th>\n                                        <th style={{ width: '20%' }}>\n                                            Tipo\n                                        </th>\n                                        <th style={{ width: '30%' }}>\n                                        </th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n\n                                    {funcionarios.map((item, index) => {\n                                        return <tr key={item.id_funcionario}>\n                                            <td name=\"idFuncionario\">{item.id_funcionario}</td>\n                                            <td>\n                                                <a>{item.nome}</a>\n                                                <br />\n                                                {/* <small>Created 01.01.2019</small> */}\n                                            </td>\n                                            <td>\n                                                <a>{item.descricao}</a>\n                                            </td>\n\n                                            <td className=\"project-actions text-right\">\n                                                <button disabled className=\"btn btn-primary btn-sm ml-3\">\n                                                    <i className=\"fas fa-eye mr-2\"></i>\n                                                    Visualizar\n                                                </button>\n                                                <button className=\"btn btn-danger btn-sm ml-3\" onClick={() => deletarFuncionario(item)}>\n                                                    <i className=\"fas fa-trash mr-2\"></i>\n                                                    Deletar\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    })}\n\n                                </tbody>\n                            </table>\n                        </div>\n                        {/* /.card-body */}\n\n                    </div>\n\n                </div>\n            </section>\n            {/* /.content */}\n            {isLoadingVisible ? <Loading /> : null}\n\n        </div>\n    );\n}\n","import React, { useContext } from 'react';\n\nimport Header from '../../../../components/Header';\nimport Footer from '../../../../components/Footer';\nimport Menu from '../../components/Menu';\nimport ListaFuncionarios from './ListaFuncionarios';\n\nexport default function GerenciarFuncionarios() {\n    return (\n        <div className=\"hold-transition sidebar-mini\">\n            <div className=\"wrapper\">\n                <Header />\n                <Menu />\n                <ListaFuncionarios />\n                <Footer />\n            </div>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport Swal from 'sweetalert2';\n\nimport api from '../../../../services/api';\n\nexport default function ListaMesas() {\n    const [estabelecimento, setEstabelecimento] = useState(null);\n    const [mesas, setMesas] = useState([]);\n\n\n    useEffect(() => {\n        async function loadStoragedData() {\n            const storagedEstabelecimento = localStorage.getItem('@TBAuth:estabelecimento');\n\n            if (storagedEstabelecimento) {\n                setEstabelecimento(JSON.parse(storagedEstabelecimento));\n            }\n        }\n        loadStoragedData();\n        getMesas();\n    }, []);\n\n    useEffect(() => {\n        getMesas();\n    }, [estabelecimento]);\n\n    async function getMesas() {\n        try {\n            const response = await api.get('/Mesa?idEstabelecimento=' + estabelecimento.id_Estabelecimento);\n            setMesas(response.data);\n        } catch (err) {\n            return err.response;\n        }\n    }\n\n    async function deletarMesas(item) {\n        Swal.fire({\n            html: `<h3>Deseja excluir a mesa <strong>${item.descricao}</strong>?</h3>`,\n            text: \"Após deletar não será possivel recuperar!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#d33',\n            cancelButtonColor: '#3085d6',\n            confirmButtonText: 'Deletar'\n        }).then(async result => {\n            if (result.value) {\n                try {\n                    const response = await api.delete('/mesa/' + item.id);\n\n                    if (response.status === 201 || response.status === 200) {\n                        Swal.fire('Sucesso!', 'Mesa deletada com sucesso!', 'success');\n                        getMesas();\n                    }\n                } catch (err) {\n                    if (err.response.status === 401 || err.response.status === 400) {\n                        Swal.fire('Erro!', 'Falha ao deletar a mesa', 'error');\n                    }\n                }\n            }\n        })\n    }\n\n    async function alterarMesas(item) {\n        const { value } = Swal.fire({\n            title: 'Digite a descrição da mesa',\n            input: 'text',\n            inputPlaceholder: 'Descrição da mesa',\n            inputValidator: (value) => {\n                if (!value) {\n                    return 'Favor digitar a Descrição da mesa!'\n                }\n            },\n            showCancelButton: true\n        }).then(async result => {\n            if (result.value) {\n                const payload = {\n                    \"id\": item.id,\n                    \"Descricao\": result.value,\n                    \"fk_id_estabelecimento\": estabelecimento.id_Estabelecimento\n                }\n                try {\n                    const response = await api.put('/Mesa', payload)\n                    if (response.status === 201 || response.status === 200) {\n                        Swal.fire('Sucesso!', 'Mesa alterada com sucesso!', 'success')\n                        getMesas();\n                    }\n                } catch (err) {\n                    if (err.response.status === 401 || err.response.status === 400) {\n                        Swal.fire('Erro!', 'Falha ao alterar mesa', 'error')\n                    }\n                }\n            }\n        })\n    }\n\n    async function cadastrarMesas() {\n        const { value } = Swal.fire({\n            title: 'Digite a descrição da mesa',\n            input: 'text',\n            inputPlaceholder: 'Descrição da mesa',\n            inputValidator: (value) => {\n                if (!value) {\n                    return 'Favor digitar a Descrição da mesa!'\n                }\n            },\n            showCancelButton: true\n        }).then(async result => {\n            if (result.value) {\n                const payload = {\n                    \"Descricao\": result.value,\n                    \"fk_id_estabelecimento\": estabelecimento.id_Estabelecimento\n                }\n                try {\n                    const response = await api.post('/Mesa', payload);\n\n                    if (response.status === 201 || response.status === 200) {\n                        Swal.fire('Sucesso!', 'Mesa cadastrada com sucesso!', 'success')\n                        getMesas();\n                    }\n                } catch (err) {\n                    if (err.response.status === 401 || err.response.status === 400) {\n                        Swal.fire('Erro!', 'Falha ao cadastrar mesa', 'error')\n                    }\n                }\n            }\n        })\n    }\n\n    return (\n        <div className=\"content-wrapper\">\n\n            {/* Content Header (Page header) */}\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>Mesas</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\n                                <li className=\"breadcrumb-item active\">Mesas</li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>{/* /.container-fluid */}\n            </section>\n\n            {/* Main content */}\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h3 className=\"card-title\">Lista de Mesas</h3>\n                            <div className=\"card-tools\">\n                                <button className=\"btn btn-success btn-sm\" onClick={cadastrarMesas}>\n                                    <i className=\"fas fa-user-plus mr-2\"></i>\n                                                    Novo\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"card-body p-0\">\n                            <table className=\"table table-striped projects\">\n                                <thead>\n                                    <tr>\n                                        <th style={{ width: '10%' }}>\n                                            ID\n                                        </th>\n                                        <th style={{ width: '40%' }}>\n                                            Nome\n                                        </th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n\n                                    {mesas.map((item, index) => {\n                                        return <tr key={item.id}>\n                                            <td>{item.id}</td>\n                                            <td>{item.descricao}</td>\n\n                                            <td className=\"project-actions text-right\">\n\n                                                <button className=\"btn btn-info btn-sm ml-3\" onClick={() => alterarMesas(item)}>\n                                                    <i className=\"fas fa-pencil-alt mr-2\"></i>\n                                                    Editar\n                                                </button>\n                                                <button className=\"btn btn-danger btn-sm ml-3\" onClick={() => deletarMesas(item)}>\n                                                    <i className=\"fas fa-trash mr-2\"></i>\n                                                    Deletar\n                                                </button>\n\n                                            </td>\n                                        </tr>\n                                    })}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport Header from '../../../../components/Header';\nimport Footer from '../../../../components/Footer';\nimport Menu from '../../components/Menu';\nimport ListaMesas from './ListaMesas';\n\nexport default function GerenciarMesas() {\n    return (\n        <div>\n            <Header />\n            <Menu />\n            <ListaMesas />\n            <Footer />\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport CurrencyInput from 'react-currency-input';\nimport Swal from 'sweetalert2';\nimport { Modal } from 'react-bootstrap';\n\nimport '../../../../components/Loading';\n\nimport api from '../../../../services/api';\nimport Loading from '../../../../components/Loading';\n\nfunction initialState() {\n    return {\n        titulo: '',\n        descricao: '',\n        valor: '',\n        categoria: '',\n        tempoEstimadoMin: 0,\n        tempoEstimadoMax: 0,\n        imagem: null,\n        isCozinha: false,\n        isCardapio: true\n    };\n}\n\nexport default function ModalCadCardapio(props) {\n    const [categorias, setCategorias] = useState([]);\n    const [valores, setValores] = useState(initialState);\n    const [isLoadingVisible, setLoadingVisible] = useState(false);\n\n    const { register, handleSubmit, errors } = useForm();\n\n    const onSubmit = data => {\n        cadastrarItem(data);\n    };\n\n    useEffect(() => {\n        getCategorias();\n    }, []);\n\n    const handleClose = () => props.setShowModal(false);\n\n    async function getCategorias() {\n        try {\n            const response = await api.get('/categoria?idEstabelecimento=' + props.idEstabelecimento);\n            setCategorias(response.data);\n            return response.data;\n        } catch (err) {\n            return err.response;\n        }\n    }\n\n    async function cadastrarItem(dados) {\n        setLoadingVisible(true);\n\n        const data = new FormData();\n\n        data.append(\"titulo\", dados.titulo);\n        data.append(\"descricao\", dados.descricao);\n        data.append(\"valor\", valores.valor);\n        data.append(\"tempo_estimado_min\", dados.tempoEstimadoMin);\n        data.append(\"tempo_estimado_max\", dados.tempoEstimadoMax);\n        data.append(\"categoria\", dados.categoria);\n        data.append(\"estabelecimento\", props.idEstabelecimento);\n        data.append(\"iscozinha\", valores.isCozinha ? 1 : 0);\n        data.append(\"iscardapio\", valores.isCardapio ? 1 : 0);\n        data.append(\"files\", valores.imagem);\n\n        try {\n            const response = await api.post('/Cardapio', data, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            });\n\n            if (response.status === 201 || response.status === 200) {\n                Swal.fire('Sucesso!', 'Item cadastrado com sucesso!', 'success');\n            }\n        } catch (err) {\n            if (err.response.status === 401 || err.response.status === 400) {\n                Swal.fire('Erro!', 'Falha ao cadastrar item', 'error');\n            }\n        } finally {\n            setLoadingVisible(false);\n            props.atualizarItens();\n            handleClose();\n        }\n    }\n\n    function handleChange(event) {\n        const { name, value } = event.target;\n        setValores({ ...valores, [name]: value });\n    }\n\n    function handleChangeValor(event, maskedValue, floatValue) {\n        setValores({ ...valores, valor: floatValue });\n    }\n\n    function handleChangeImagem(e) {\n        setValores({ ...valores, imagem: e.target.files[0] });\n    }\n\n    return (\n        <>\n            <Modal\n                show={props.showModal}\n                onHide={handleClose}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Cadastro de item no Cardápio</Modal.Title>\n                </Modal.Header>\n\n                <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n                    <Modal.Body>\n                        <div className=\"card-body\">\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"tituloItemCardapio\">Título</label>\n                                <input\n                                    name=\"titulo\"\n                                    type=\"text\"\n                                    className={errors.titulo ? \"form-control is-invalid\" : \"form-control\"}\n                                    id=\"tituloItemCardapio\"\n                                    placeholder=\"Título do item\"\n                                    onChange={handleChange}\n                                    ref={register({\n                                        required: {\n                                            value: \"Required\",\n                                            message: \"O título é obrigatório\"\n                                        },\n                                    })}\n                                />\n                                <span className=\"error invalid-feedback\">{errors.titulo && errors.titulo.message}</span>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"descricaoItemCardapio\">Descrição</label>\n                                <input\n                                    name=\"descricao\"\n                                    type=\"text\"\n                                    className={errors.descricao ? \"form-control is-invalid\" : \"form-control\"}\n                                    id=\"descricaoItemCardapio\"\n                                    placeholder=\"Descrição do item\"\n                                    onChange={handleChange}\n                                    ref={register({\n                                        required: {\n                                            value: \"Required\",\n                                            message: \"A descrição é obrigatória\"\n                                        },\n                                    })}\n                                />\n                                <span className=\"error invalid-feedback\">{errors.descricao && errors.descricao.message}</span>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"valorItemCardapio\">Valor</label>\n                                <CurrencyInput\n                                    name=\"valor\"\n                                    type=\"text\"\n                                    prefix=\"R$\"\n                                    decimalSeparator=\",\"\n                                    thousandSeparator=\".\"\n                                    value={valores.valor}\n                                    className={errors.valor ? \"form-control is-invalid\" : \"form-control\"}\n                                    id=\"valorItemCardapio\"\n                                    onChangeEvent={handleChangeValor}\n                                // ref={register({\n                                //     required: {\n                                //         value: \"Required\",\n                                //         message: \"O valor é obrigatório\"\n                                //     },\n                                // })}\n                                />\n                                <span className=\"error invalid-feedback\">{errors.valorItemCardapio && errors.valorItemCardapio.message}</span>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"categoriaItemCardapio\">Categoria</label>\n                                <select\n                                    name=\"categoria\"\n                                    className={errors.categoria ? \"form-control is-invalid\" : \"form-control\"}\n                                    id=\"categoriaItemCardapio\"\n                                    ref={register({\n                                        required: {\n                                            value: \"Required\",\n                                            message: \"A categoria é obrigatória\"\n                                        },\n                                    })}\n                                >\n                                    <option value=\"\">Selecione</option>\n                                    {categorias.map((item, index) => (\n                                        <option key={item.id} value={item.id}>{item.descricao}</option>\n                                    ))}\n                                </select>\n                                <span className=\"error invalid-feedback\">{errors.categoria && errors.categoria.message}</span>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"tempoEstimadoMin\">Tempo estimado mínimo</label>\n                                <input\n                                    name=\"tempoEstimadoMin\"\n                                    type=\"number\"\n                                    className={errors.tempoEstimadoMin ? \"form-control is-invalid\" : \"form-control\"}\n                                    id=\"tempoEstimadoMin\"\n                                    placeholder=\"Tempo mínimo estimado\"\n                                    onChange={handleChange}\n                                    ref={register({\n                                        required: {\n                                            value: \"Required\",\n                                            message: \"O tempo estimado min é obrigatório\"\n                                        },\n                                    })}\n                                />\n                                <span className=\"error invalid-feedback\">{errors.tempoEstimadoMin && errors.tempoEstimadoMin.message}</span>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"tempoEstimadoMax\">Tempo estimado máximo</label>\n                                <input\n                                    name=\"tempoEstimadoMax\"\n                                    type=\"number\"\n                                    className={errors.tempoEstimadoMax ? \"form-control is-invalid\" : \"form-control\"}\n                                    id=\"tempoEstimadoMax\"\n                                    placeholder=\"Tempo mínimo máximo\"\n                                    onChange={handleChange}\n                                    ref={register({\n                                        required: {\n                                            value: \"Required\",\n                                            message: \"O tempo estimado max é obrigatório\"\n                                        },\n                                    })}\n                                />\n                                <span className=\"error invalid-feedback\">{errors.tempoEstimadoMax && errors.tempoEstimadoMax.message}</span>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"imagemItemCardapio\">Imagem do item</label>\n                                <input\n                                    name=\"imagem\"\n                                    type=\"file\"\n                                    accept=\"image/png, image/jpeg\"\n                                    className={errors.imagem ? \"form-control-file is-invalid\" : \"form-control-file\"}\n                                    id=\"imagemItemCardapio\"\n                                    onChange={handleChangeImagem}\n                                    ref={register({\n                                        required: {\n                                            value: \"Required\",\n                                            message: \"A imagem é obrigatória\"\n                                        },\n                                    })}\n                                />\n                                <span className=\"error invalid-feedback\">{errors.imagem && errors.imagem.message}</span>\n                            </div>\n\n                            <div className=\"form-check\">\n                                <input\n                                    name=\"isCozinha\"\n                                    type=\"checkbox\"\n                                    className=\"form-check-input\"\n                                    id=\"itemCozinhaCardapio\"\n                                    onChange={handleChange}\n                                />\n                                <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Item de cozinha ?</label>\n                            </div>\n\n                            <div className=\"form-check\">\n                                <input\n                                    name=\"isCardapio\"\n                                    type=\"checkbox\"\n                                    className=\"form-check-input\"\n                                    id=\"isCardapio\"\n                                    onChange={handleChange}\n                                    defaultChecked={true}\n                                />\n                                <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Incluir no cardápio ?</label>\n                            </div>\n                        </div>\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <button type=\"submit\" className=\"btn btn-primary\">Cadastrar</button>\n                        <button type=\"button\" className=\"btn btn-secondary ml-3\" onClick={handleClose}>Cancelar</button>\n                    </Modal.Footer>\n                </form>\n            </Modal>\n\n            {isLoadingVisible ? <Loading /> : null}\n        </>\n    );\n}","import React, { useEffect } from 'react';\nimport { Modal, Image } from 'react-bootstrap';\n\nimport './styles/ModalVisualizar.css';\n\nconst baseURL = 'http://52.45.128.89';\n\nexport default function ModalCadCardapio(props) {\n    const currencyFormatter = new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' });\n    const handleClose = () => props.setShowModal(false);\n\n    console.log(props.item);\n\n    return (\n        <>\n            <Modal\n                show={props.showModal}\n                onHide={handleClose}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Body>\n                    <div className=\"card-body\">\n                        <div className=\"content-item\">\n                            <Image className=\"img-item\" src={baseURL + props.item.imagem} fluid />\n                            <h4 className=\"mt-3\"><strong>{props.item.titulo}</strong></h4>\n                            <p className=\"texto-item\">{props.item.item}</p>\n                            <p className=\"texto-item\">\n                                Preparo: {props.item.tempo_estimado_min}{props.item.tempo_estimado_max ? ` a ${props.item.tempo_estimado_max}` : ''} minutos\n                            </p>\n                            <p className=\"valor-item\">{currencyFormatter.format(props.item.valor)}</p>\n                        </div>\n                    </div>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={handleClose}>Fechar</button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}","import React, { useState, useEffect, useContext } from 'react';\nimport Swal from 'sweetalert2';\n\nimport api from '../../../../services/api';\nimport ModalCadCardapio from './ModalCadCardapio';\nimport ModalVisualizar from './ModalVisualizar';\n\nexport default function ListaFuncionarios() {\n    const [showModal, setShowModal] = useState(false);\n    const [showModalVisualizar, setModalVisualizar] = useState(false);\n    const [itemSelecionado, setItemSelecionado] = useState(null);\n    const [estabelecimento, setEstabelecimento] = useState(null);\n    const [cardapio, setCardapio] = useState([]);\n\n    const currencyFormatter = new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' });\n\n    useEffect(() => {\n        async function loadStoragedData() {\n            const storagedEstabelecimento = localStorage.getItem('@TBAuth:estabelecimento');\n\n            if (storagedEstabelecimento) {\n                setEstabelecimento(JSON.parse(storagedEstabelecimento));\n            }\n        }\n\n        loadStoragedData();\n        getCardapio();\n    }, []);\n\n    useEffect(() => {\n        getCardapio();\n    }, [estabelecimento]);\n\n    async function getCardapio() {\n        try {\n            const response = await api.get('/Cardapio/' + estabelecimento.id_Estabelecimento);\n            setCardapio(response.data);\n            return response.data;\n        } catch (err) {\n            return err.response;\n        }\n    }\n\n    async function handleCadastrar() {\n        setShowModal(true);\n    }\n\n    async function handleVisualizar(item) {\n        setItemSelecionado(item);\n        setModalVisualizar(true);\n    }\n\n    async function deletarItem(item) {\n        Swal.fire({\n            title: 'Deseja deletar o item?',\n            text: \"Após deletar não será possivel recuperar!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#d33',\n            cancelButtonColor: '#3085d6',\n            confirmButtonText: 'Deletar'\n        }).then(async result => {\n            if (result.value) {\n                try {\n                    const response = await api.delete('/cardapio/' + item.codigo_item);\n\n                    if (response.status === 201 || response.status === 200) {\n                        Swal.fire('Sucesso!', 'Item deletado com sucesso!', 'success');\n                        getCardapio();\n                    }\n                } catch (err) {\n                    if (err.response.status === 401 || err.response.status === 400) {\n                        Swal.fire('Erro!', 'Falha ao deletar o item', 'error');\n                    }\n                }\n            }\n        })\n    }\n\n    function ItensCardapio() {\n        let rows = [];\n\n        if (cardapio) {\n            cardapio.map((obj, objIndex) => {\n                rows.push(obj.itens.map((item, itemIndex) => {\n                    return <tr key={item.codigo_item}>\n                        <td>{item.codigo_item}</td>\n                        <td><a>{item.titulo}</a></td>\n                        <td><a>{obj.categoria}</a></td>\n                        <td><a>{item.item}</a></td>\n                        <td><a>{currencyFormatter.format(item.valor)}</a></td>\n                        <td className=\"project-actions text-right\">\n                            <button className=\"btn btn-primary btn-sm ml-3\" onClick={() => handleVisualizar(item)}>\n                                <i className=\"fas fa-eye mr-2\"></i>\n                            Visualizar\n                            </button>\n                            <button className=\"btn btn-danger btn-sm ml-3\" onClick={() => deletarItem(item)}>\n                                <i className=\"fas fa-trash mr-2\"></i>\n                            Deletar\n                        </button>\n                        </td>\n                    </tr>\n                }))\n            });\n\n            return rows;\n        }\n\n        return null;\n    }\n\n    return (\n        <div className=\"content-wrapper\">\n\n            {/* Content Header (Page header) */}\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>Cardápio</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\n                                <li className=\"breadcrumb-item active\">Cardápio</li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>{/* /.container-fluid */}\n            </section>\n\n            {/* Main content */}\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h3 className=\"card-title\">Lista de itens do Cardápio</h3>\n                            <div className=\"card-tools\">\n                                <button className=\"btn btn-success btn-sm\" onClick={handleCadastrar}>\n                                    <i className=\"fas fa-user-plus mr-2\"></i>\n                                                    Novo\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"card-body p-0\">\n                            <table className=\"table table-striped projects\">\n                                <thead>\n                                    <tr>\n                                        <th style={{ width: '5%' }}>\n                                            ID\n                                        </th>\n                                        <th style={{ width: '20%' }}>\n                                            Título\n                                        </th>\n                                        <th style={{ width: '15%' }}>\n                                            Categoria\n                                        </th>\n                                        <th style={{ width: '30%' }}>\n                                            Descrição\n                                        </th>\n                                        <th style={{ width: '10%' }}>\n                                            Valor\n                                        </th>\n                                        <th style={{ width: '20%' }}></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n\n                                    {ItensCardapio()}\n\n                                </tbody>\n                            </table>\n                        </div>\n                        {/* /.card-body */}\n\n                    </div>\n\n                </div>\n            </section>\n\n            {showModal\n                ? <ModalCadCardapio\n                    idEstabelecimento={estabelecimento.id_Estabelecimento}\n                    showModal={showModal}\n                    setShowModal={setShowModal}\n                    atualizarItens={getCardapio}\n                />\n                : null\n            }\n\n            {showModalVisualizar\n                ? <ModalVisualizar\n                    showModal={showModalVisualizar}\n                    setShowModal={setModalVisualizar}\n                    item={itemSelecionado}\n                />\n                : null\n            }\n\n        </div>\n    );\n}\n","import React from 'react';\n\nimport Header from '../../../../components/Header';\nimport Footer from '../../../../components/Footer';\nimport Menu from '../../components/Menu';\nimport ListaCardapio from './ListaCardapio';\n\nexport default function GerenciarCardapio() {\n    return (\n        <div className=\"hold-transition sidebar-mini\">\n            <div className=\"wrapper\">\n                <Header />\n                <Menu />\n                <ListaCardapio />\n                <Footer />\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport Header from '../../../../components/Header';\nimport Footer from '../../../../components/Footer';\nimport Menu from '../../components/Menu';\nimport Content from '../../components/Content';\n\nexport default function GerenciarPromocoes() {\n    return (\n        <div>\n            <Header />\n            <Menu />\n            <Content />\n            <Footer />\n        </div>\n    );\n}\n","import React from 'react';\n\nexport default function CardPedido(props) {\n    return (\n        <div className=\"col-12 col-sm-6 col-md-4 d-flex align-items-stretch\">\n            <div className=\"card bg-light col-12\">\n                <div className=\"card-header text-muted border-bottom-0\">\n                    <h3>Mesa: {props.mesa} / Pedido: {props.numeroPedido}</h3>\n                </div>\n                <div className=\"card-body pt-0\">\n                    <div className=\"col-12\">\n                        <ul className=\"ml-0 mb-0 fa-ul text-muted list-group list-group-flush\">\n                            {props.itens.map((item, index) => {\n                                let linha = `${item.produto}`;\n\n                                if (item.quantidade)\n                                    linha += `  /  qtd: ${item.quantidade}`;\n                                if (item.porcao)\n                                    linha += `  /  porção: ${item.porcao}`;\n\n                                return <li style={{ fontSize: \"16px\", backgroundColor: \"transparent\" }} key={index} className=\"medium list-group-item\">{linha}</li>;\n                            })}\n                        </ul>\n                            \n                        <div className=\"mt-4 mb-0\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">Atendente: {props.atendente}</div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"col-12\">Tempo de espera: {props.tempoEspera}</div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <div style={{ backgroundColor: \"transparent\" }} className=\"card-footer mb-2 mt-0\">\n                    <div className=\"text-center\">\n                        <a href=\"#\" className=\"btn btn-lg btn-primary btn-block\">Pronto</a>\n                        <a href=\"#\" className=\"btn btn-lg btn-success btn-block\">Entregue</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import React from 'react';\n\nimport CardPedido from './CardPedido';\n\nconst listaPedidos = [\n    {\n        numeroPedido: 1,\n        mesa: 1,\n        atendente: 'Roberto',\n        itens: [\n            {\n                produto: 'Batata frita',\n                quantidade: null,\n                porcao: 'grande'\n            },\n            {\n                produto: 'Refri',\n                quantidade: 1,\n                porcao: 'lata'\n            },\n        ],\n        tempoEspera: 15\n    },\n    {\n        numeroPedido: 2,\n        mesa: 1,\n        atendente: 'Pedro',\n        itens: [\n            {\n                produto: 'Batata frita',\n                quantidade: null,\n                porcao: 'grande'\n            },\n            {\n                produto: 'Refri',\n                quantidade: 1,\n                porcao: 'lata'\n            },\n        ],\n        tempoEspera: 15\n    },\n    {\n        numeroPedido: 3,\n        mesa: 1,\n        atendente: 'Roberto',\n        itens: [\n            {\n                produto: 'Batata frita',\n                quantidade: null,\n                porcao: 'grande'\n            },\n            {\n                produto: 'Refri',\n                quantidade: 1,\n                porcao: 'lata'\n            },\n        ],\n        tempoEspera: 15\n    },\n    {\n        numeroPedido: 4,\n        mesa: 1,\n        atendente: 'Humberto',\n        itens: [\n            {\n                produto: 'Batata frita',\n                quantidade: null,\n                porcao: 'grande'\n            },\n            {\n                produto: 'Refri',\n                quantidade: 1,\n                porcao: 'lata'\n            },\n        ],\n        tempoEspera: 15\n    },\n];\n\nexport default function CozinhaContent() {\n    return (\n        <div className=\"content-wrapper\">\n\n            {/* Content Header (Page header) */}\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>Lista de pedidos</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\n                                <li className=\"breadcrumb-item active\">Main</li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>{/* /.container-fluid */}\n            </section>\n\n            {/* Main content */}\n            <section className=\"content\">\n                {/* Default box */}\n                <div className=\"card card-solid\">\n                    <div className=\"card-body pb-0\">\n                        <div className=\"row d-flex align-items-stretch\">\n\n                            {listaPedidos.map((pedido, index) => (\n                                <CardPedido\n                                    key={pedido.numeroPedido}\n                                    mesa={pedido.mesa}\n                                    numeroPedido={pedido.numeroPedido}\n                                    itens={pedido.itens}\n                                    atendente={pedido.atendente}\n                                    tempoEspera={pedido.tempoEspera}\n                                />\n                            ))}\n\n                        </div>\n                    </div>\n                    {/* /.card-body */}\n                    <div className=\"card-footer\">\n                        <nav aria-label=\"Contacts Page Navigation\">\n                            <ul className=\"pagination justify-content-center m-0\">\n                                <li className=\"page-item active\"><a className=\"page-link\" href=\"#\">1</a></li>\n                                <li className=\"page-item\"><a className=\"page-link\" href=\"#\">2</a></li>\n                                <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n                                <li className=\"page-item\"><a className=\"page-link\" href=\"#\">4</a></li>\n                                <li className=\"page-item\"><a className=\"page-link\" href=\"#\">5</a></li>\n                                <li className=\"page-item\"><a className=\"page-link\" href=\"#\">6</a></li>\n                                <li className=\"page-item\"><a className=\"page-link\" href=\"#\">7</a></li>\n                                <li className=\"page-item\"><a className=\"page-link\" href=\"#\">8</a></li>\n                            </ul>\n                        </nav>\n                    </div>\n                    {/* /.card-footer */}\n                </div>\n                {/* /.card */}\n            </section>\n            {/* /.content */}\n\n\n        </div>\n    );\n}\n","import React from 'react';\n\nimport Header from '../../../../components/Header';\nimport Footer from '../../../../components/Footer';\nimport Menu from '../../components/Menu';\nimport CozinhaContent from './components/CozinhaContent';\n\nexport default function GerenciarCozinha() {\n    return (\n        <div>\n            <Header />\n            <Menu />\n            <CozinhaContent />\n            <Footer />\n        </div>\n    );\n}\n","import React, { useContext } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from 'react-router-dom';\n\nimport LoginEstabelecimento from '../pages/LoginEstabelecimento';\nimport CadastroEstabelecimento from '../pages/CadastroEstabelecimento';\nimport PainelEstabelecimento from '../pages/PainelEstabelecimento';\nimport GerenciarFuncionarios from '../pages/PainelEstabelecimento/pages/GerenciarFuncionarios';\nimport GerenciarMesas from '../pages/PainelEstabelecimento/pages/GerenciarMesas';\nimport GerenciarCardapio from '../pages/PainelEstabelecimento/pages/GerenciarCardapio';\nimport GerenciarPromocoes from '../pages/PainelEstabelecimento/pages/GerenciarPromocoes';\nimport GerenciarCozinha from '../pages/PainelEstabelecimento/pages/GerenciarCozinha';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const storagedToken = localStorage.getItem('@TBAuth:token');\n\n    return (\n        <Route\n            {...rest}\n            render={() => storagedToken\n                ? <Component {...rest} />\n                : <Redirect to=\"/\" />\n            }\n        />\n    );\n};\n\nconst AppRoutes = () => (\n    <Router>\n        <Switch>\n            <Route path=\"/\" component={LoginEstabelecimento} exact />\n            <Route path=\"/cadastroEstabelecimento\" component={CadastroEstabelecimento} />\n            <PrivateRoute path=\"/painelEstabelecimento\" component={PainelEstabelecimento} />\n            <PrivateRoute path=\"/gerenciarFuncionarios\" component={GerenciarFuncionarios} />\n            <PrivateRoute path=\"/gerenciarMesas\" component={GerenciarMesas} />\n            <PrivateRoute path=\"/gerenciarCardapio\" component={GerenciarCardapio} />\n            <PrivateRoute path=\"/gerenciarPromocoes\" component={GerenciarPromocoes} />\n            <PrivateRoute path=\"/gerenciarCozinha\" component={GerenciarCozinha} />\n        </Switch>\n    </Router>\n);\n\nexport default AppRoutes;","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from 'react-router-dom';\n\nimport PainelFuncionario from '../pages/PainelFuncionario';\n\nconst FuncionarioRoutes = () => (\n    <Router>\n        <Switch>\n            <Route path=\"/painel-funcionario\" component={PainelFuncionario} />\n        </Switch>\n    </Router>\n);\n\nexport default FuncionarioRoutes;","import React, { useContext } from 'react';\n\nimport GeralContext from '../contexts/geral';\nimport AuthEstabelecimentoContext from '../contexts/auth-estabelecimento';\nimport AuthFuncionarioContext from '../contexts/auth-funcionario';\n\nimport AppRoutes from './app.routes';\nimport AuthFuncionarioRoutes from './auth-funcionario.routes';\nimport AuthEstabelecimentoRoutes from './auth-estabelecimento.routes';\n\nimport EstabelecimentoRoutes from './estabelecimento.routes';\nimport FuncionarioRoutes from './funcionario.routes';\n\nconst Routes = () => {\n    // const { tipoUsuario } = useContext(GeralContext);\n    // const { signedEstabelecimento } = useContext(AuthEstabelecimentoContext);\n    // const { signedFuncionario, estabelecimento } = useContext(AuthFuncionarioContext);\n\n    // if (!tipoUsuario)\n    //     return <AppRoutes />;\n    // else {\n    //     if (tipoUsuario === 'estabelecimento')\n    //         return signedEstabelecimento ? <EstabelecimentoRoutes /> : <AuthEstabelecimentoRoutes />;\n\n    //     return signedFuncionario && estabelecimento ? <FuncionarioRoutes /> : <AuthFuncionarioRoutes />\n    // }\n\n    return <AppRoutes />\n};\n\nexport default Routes;","import React from 'react';\n\nimport { GeralProvider } from './contexts/geral';\nimport { AuthEstabelecimentoProvider } from './contexts/auth-estabelecimento';\nimport { AuthFuncionarioProvider } from './contexts/auth-funcionario';\n\nimport Routes from './routes';\n\nexport default function App() {\n  return (\n    <GeralProvider>\n      <AuthEstabelecimentoProvider>\n        <AuthFuncionarioProvider>\n          <Routes />\n        </AuthFuncionarioProvider>\n      </AuthEstabelecimentoProvider>\n    </GeralProvider>\n  );\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/logo.eeabcdcb.png\";"],"sourceRoot":""}