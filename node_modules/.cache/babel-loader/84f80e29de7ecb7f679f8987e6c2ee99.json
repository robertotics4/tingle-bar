{"ast":null,"code":"var _jsxFileName = \"/home/roberto/\\xC1rea de Trabalho/tingle-bar/src/pages/CadastroEstabelecimento/index.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport './CadastroEstabelecimento.css';\nimport api from '../../services/api';\nexport default function CadastroEstabelecimento() {\n  const [valores, setValores] = useState({});\n  const [tiposEstabelecimento, setTiposEstabelecimento] = useState([]);\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm();\n\n  const onSubmit = data => {\n    setValores(data);\n    handleCadastrar();\n  };\n\n  useEffect(() => {\n    async function getTiposEstabelecimento() {\n      try {\n        const {\n          data\n        } = await api.get('/api/tipoestabelecimento');\n        setTiposEstabelecimento(data.tipoestabelecimento);\n      } catch (err) {\n        console.log({\n          err\n        });\n      }\n    }\n\n    getTiposEstabelecimento();\n  }, []);\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setValores({ ...valores,\n      [name]: value\n    });\n  }\n\n  async function handleCadastrar() {\n    const payload = {\n      \"Nome\": valores.nome,\n      \"Cnpj\": valores.cnpj,\n      \"Endereco\": valores.endereco,\n      \"Numero\": valores.numero,\n      \"Latitude\": valores.latitude,\n      \"Longitude\": valores.longitude,\n      \"IdTipoEstabelecimento\": valores.tipoEstabelecimento,\n      \"Imagem\": \"/uploads/default.png\",\n      \"Distancia_km\": \"0\",\n      \"Senha\": valores.senha\n    };\n\n    try {\n      const resposta = await api.post('/api/estabelecimento', payload);\n      console.log({\n        resposta\n      });\n    } catch (err) {\n      console.log({\n        err\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hold-transition register-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"../../index2.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 49\n    }\n  }, \"Tingle\"), \"Bar\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body register-card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"login-box-msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \"Cadastrar novo estabelecimento\"), /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"nome\",\n    placeholder: \"Nome do estabelecimento\",\n    className: errors.nome ? \"form-control is-invalid\" : \"form-control\",\n    type: \"text\",\n    onChange: handleChange,\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"O nome do estabelecimento é obrigatório\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  }, errors.nome && errors.nome.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 col-md-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"endereco\",\n    placeholder: \"Endere\\xE7o\",\n    className: errors.endereco ? \"form-control is-invalid\" : \"form-control\",\n    type: \"text\",\n    onChange: handleChange,\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"O endereço é obrigatório\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 37\n    }\n  }, errors.endereco && errors.endereco.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"numero\",\n    placeholder: \"N\\xBA\",\n    className: errors.numero ? \"form-control is-invalid\" : \"form-control\",\n    type: \"number\",\n    onChange: handleChange,\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"O número é obrigatório\"\n      },\n      maxLength: {\n        value: 4,\n        message: \"Limite de 4 caracteres\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  }, errors.numero && errors.numero.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"CNPJ\",\n    className: errors.cnpj ? \"form-control is-invalid\" : \"form-control\",\n    name: \"cnpj\",\n    onChange: handleChange,\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"O CNPJ é obrigatório\"\n      },\n      pattern: {\n        value: /^\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}-\\d{2}$/,\n        message: \"CNPJ inválido\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 37\n    }\n  }, errors.cnpj && errors.cnpj.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: errors.tipoEstabelecimento ? \"form-control is-invalid\" : \"form-control\",\n    onChange: handleChange,\n    name: \"tipoEstabelecimento\",\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"O tipo de estabelecimento é obrigatório\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: 0,\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 41\n    }\n  }, \"Tipo de estabelecimento\"), tiposEstabelecimento.map((tipoEstabelecimento, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: tipoEstabelecimento.id,\n    value: tipoEstabelecimento.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 45\n    }\n  }, tipoEstabelecimento.descricao))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 37\n    }\n  }, errors.tipoEstabelecimento && errors.tipoEstabelecimento.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Latitude\",\n    name: \"latitude\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Longitude\",\n    name: \"longitude\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: errors.senha ? \"form-control is-invalid\" : \"form-control\",\n    placeholder: \"Senha\",\n    name: \"senha\",\n    onChange: handleChange,\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"A senha é obrigatória\"\n      },\n      pattern: {\n        value: /(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n        // Mínimo de oito caracteres, pelo menos uma letra e um número\n        message: \"Mínimo de oito caracteres, com pelo menos uma letra e um número\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 37\n    }\n  }, errors.senha && errors.senha.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: errors.repeticaoSenha ? \"form-control is-invalid\" : \"form-control\",\n    placeholder: \"Redigite a senha\",\n    name: \"repeticaoSenha\",\n    onChange: handleChange,\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"A repetição de senha é obrigatória\"\n      },\n      validate: value => value === watch('senha') || \"As senhas não coincidem\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 37\n    }\n  }, errors.repeticaoSenha && errors.repeticaoSenha.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icheck-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: errors.aceitaTermos ? \"\" : \"\",\n    type: \"checkbox\",\n    checked: valores.aceitaTermos,\n    name: \"aceitaTermos\",\n    defaultValue: true,\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"Aceite os termos para continuar\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"agreeTerms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 41\n    }\n  }, \"\\xA0\\xA0Eu aceito todos os \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 76\n    }\n  }, \"termos de uso\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    style: {\n      display: \"inline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 112\n    }\n  }), errors.aceitaTermos && errors.aceitaTermos.message)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 37\n    }\n  }, \"Cadastrar\")))), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"login.html\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 25\n    }\n  }, \"J\\xE1 tenho uma conta de acesso\")))));\n}","map":{"version":3,"sources":["/home/roberto/Área de Trabalho/tingle-bar/src/pages/CadastroEstabelecimento/index.jsx"],"names":["React","useState","useEffect","useForm","api","CadastroEstabelecimento","valores","setValores","tiposEstabelecimento","setTiposEstabelecimento","register","handleSubmit","errors","watch","onSubmit","data","handleCadastrar","getTiposEstabelecimento","get","tipoestabelecimento","err","console","log","handleChange","event","name","value","target","payload","nome","cnpj","endereco","numero","latitude","longitude","tipoEstabelecimento","senha","resposta","post","required","message","maxLength","pattern","map","index","id","descricao","repeticaoSenha","validate","aceitaTermos","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\n\nimport './CadastroEstabelecimento.css';\n\nimport api from '../../services/api';\n\nexport default function CadastroEstabelecimento() {\n    const [valores, setValores] = useState({});\n    const [tiposEstabelecimento, setTiposEstabelecimento] = useState([]);\n\n    const { register, handleSubmit, errors, watch } = useForm();\n\n    const onSubmit = data => {\n        setValores(data);\n        handleCadastrar();\n    };\n\n    useEffect(() => {\n        async function getTiposEstabelecimento() {\n            try {\n                const { data } = await api.get('/api/tipoestabelecimento');\n                setTiposEstabelecimento(data.tipoestabelecimento);\n            } catch (err) {\n                console.log({ err });\n            }\n        }\n\n        getTiposEstabelecimento();\n    }, []);\n\n    function handleChange(event) {\n        const { name, value } = event.target;\n        setValores({ ...valores, [name]: value });\n    }\n\n    async function handleCadastrar() {\n        const payload = {\n            \"Nome\": valores.nome,\n            \"Cnpj\": valores.cnpj,\n            \"Endereco\": valores.endereco,\n            \"Numero\": valores.numero,\n            \"Latitude\": valores.latitude,\n            \"Longitude\": valores.longitude,\n            \"IdTipoEstabelecimento\": valores.tipoEstabelecimento,\n            \"Imagem\": \"/uploads/default.png\",\n            \"Distancia_km\": \"0\",\n            \"Senha\": valores.senha\n        }\n\n        try {\n            const resposta = await api.post('/api/estabelecimento', payload);\n            console.log({ resposta });\n        } catch (err) {\n            console.log({ err });\n        }\n    }\n\n    return (\n        <div className=\"hold-transition register-page\">\n            <div className=\"register-box\">\n                <div className=\"register-logo\">\n                    <a href=\"../../index2.html\"><b>Tingle</b>Bar</a>\n                </div>\n\n                <div className=\"card\">\n                    <div className=\"card-body register-card-body\">\n                        <p className=\"login-box-msg\">Cadastrar novo estabelecimento</p>\n\n                        <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n\n                            <div className=\"row\">\n                                <div className=\"mb-3 col-md-12\">\n                                    <input\n                                        name=\"nome\"\n                                        placeholder=\"Nome do estabelecimento\"\n                                        className={errors.nome ? \"form-control is-invalid\" : \"form-control\"}\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        ref={register({\n                                            required: {\n                                                value: \"Required\",\n                                                message: \"O nome do estabelecimento é obrigatório\"\n                                            },\n                                        })}\n                                    />\n                                    <span className=\"error invalid-feedback\">{errors.nome && errors.nome.message}</span>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"mb-3 col-md-10\">\n                                    <input\n                                        name=\"endereco\"\n                                        placeholder=\"Endereço\"\n                                        className={errors.endereco ? \"form-control is-invalid\" : \"form-control\"}\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        ref={register({\n                                            required: {\n                                                value: \"Required\",\n                                                message: \"O endereço é obrigatório\"\n                                            }\n                                        })}\n                                    />\n                                    <span className=\"error invalid-feedback\">{errors.endereco && errors.endereco.message}</span>\n                                </div>\n                                <div className=\"mb-3 col-md-2\">\n                                    <input\n                                        name=\"numero\"\n                                        placeholder=\"Nº\"\n                                        className={errors.numero ? \"form-control is-invalid\" : \"form-control\"}\n                                        type=\"number\"\n                                        onChange={handleChange}\n                                        ref={register({\n                                            required: {\n                                                value: \"Required\",\n                                                message: \"O número é obrigatório\"\n                                            },\n                                            maxLength: {\n                                                value: 4,\n                                                message: \"Limite de 4 caracteres\"\n                                            }\n                                        })}\n                                    />\n                                    <span className=\"error invalid-feedback\">{errors.numero && errors.numero.message}</span>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"mb-3 col-md-12\">\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"CNPJ\"\n                                        className={errors.cnpj ? \"form-control is-invalid\" : \"form-control\"}\n                                        name=\"cnpj\"\n                                        onChange={handleChange}\n                                        ref={register({\n                                            required: {\n                                                value: \"Required\",\n                                                message: \"O CNPJ é obrigatório\"\n                                            },\n                                            pattern: {\n                                                value: /^\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}-\\d{2}$/,\n                                                message: \"CNPJ inválido\"\n                                            }\n                                        })}\n                                    />\n                                    <span className=\"error invalid-feedback\">{errors.cnpj && errors.cnpj.message}</span>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"mb-3 col-md-12\">\n                                    <select\n                                        className={errors.tipoEstabelecimento ? \"form-control is-invalid\" : \"form-control\"}\n                                        onChange={handleChange}\n                                        name=\"tipoEstabelecimento\"\n                                        ref={register({\n                                            required: {\n                                                value: \"Required\",\n                                                message: \"O tipo de estabelecimento é obrigatório\"\n                                            },\n                                        })}\n                                    >\n                                        <option key={0} value={\"\"}>Tipo de estabelecimento</option>\n\n                                        {tiposEstabelecimento.map((tipoEstabelecimento, index) => (\n                                            <option key={tipoEstabelecimento.id} value={tipoEstabelecimento.id}>{tipoEstabelecimento.descricao}</option>\n                                        ))}\n\n                                        {/* <option value=\"\">Tipo de estabelecimento</option>\n                                        <option value={1}>Bar</option>\n                                        <option value={2}>Restaurante</option>\n                                        <option value={3}>Lanchonete</option> */}\n                                    </select>\n                                    <span className=\"error invalid-feedback\">{errors.tipoEstabelecimento && errors.tipoEstabelecimento.message}</span>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"mb-3 col-md-6\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        placeholder=\"Latitude\"\n                                        name=\"latitude\"\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div className=\"mb-3 col-md-6\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        placeholder=\"Longitude\"\n                                        name=\"longitude\"\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"mb-3 col-md-12\">\n                                    <input\n                                        type=\"password\"\n                                        className={errors.senha ? \"form-control is-invalid\" : \"form-control\"}\n                                        placeholder=\"Senha\"\n                                        name=\"senha\"\n                                        onChange={handleChange}\n                                        ref={register({\n                                            required: {\n                                                value: \"Required\",\n                                                message: \"A senha é obrigatória\"\n                                            },\n                                            pattern: {\n                                                value: /(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, // Mínimo de oito caracteres, pelo menos uma letra e um número\n                                                message: \"Mínimo de oito caracteres, com pelo menos uma letra e um número\"\n                                            }\n                                        })}\n                                    />\n                                    <span className=\"error invalid-feedback\">{errors.senha && errors.senha.message}</span>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"mb-3 col-md-12\">\n                                    <input\n                                        type=\"password\"\n                                        className={errors.repeticaoSenha ? \"form-control is-invalid\" : \"form-control\"}\n                                        placeholder=\"Redigite a senha\"\n                                        name=\"repeticaoSenha\"\n                                        onChange={handleChange}\n                                        ref={register({\n                                            required: {\n                                                value: \"Required\",\n                                                message: \"A repetição de senha é obrigatória\"\n                                            },\n                                            validate: value => value === watch('senha') || \"As senhas não coincidem\"\n                                        })}\n                                    />\n                                    <span className=\"error invalid-feedback\">{errors.repeticaoSenha && errors.repeticaoSenha.message}</span>\n                                </div>\n                            </div>\n\n                            <div className=\"row mb-3\">\n                                <div className=\"col-12\">\n                                    <div className=\"icheck-primary\">\n                                        <input\n                                            className={errors.aceitaTermos ? \"\" : \"\"}\n                                            type=\"checkbox\"\n                                            checked={valores.aceitaTermos}\n                                            name=\"aceitaTermos\"\n                                            defaultValue\n                                            ref={register({\n                                                required: {\n                                                    value: \"Required\",\n                                                    message: \"Aceite os termos para continuar\"\n                                                },\n                                            })}\n                                        />\n                                        <label htmlFor=\"agreeTerms\">\n                                            &nbsp;&nbsp;Eu aceito todos os <a href=\"#\">termos de uso</a>\n                                        </label>\n                                        <span className=\"error invalid-feedback\" style={{ display: \"inline\" }}><br />{errors.aceitaTermos && errors.aceitaTermos.message}</span>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"mb-2 col-12\">\n                                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Cadastrar</button>\n                                </div>\n                            </div>\n\n                        </form>\n\n                        <a href=\"login.html\" className=\"text-center\">Já tenho uma conta de acesso</a>\n                    </div>\n                    {/* /.form-box */}\n                </div>{/* /.card */}\n            </div>\n            {/* /.register-box */}\n        </div>\n\n    );\n}"]},"metadata":{},"sourceType":"module"}