{"ast":null,"code":"var _jsxFileName = \"/home/roberto/\\xC1rea de Trabalho/tingle-bar/src/pages/LoginFuncionario/index.jsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport Swal from 'sweetalert2';\nimport { useHistory } from 'react-router-dom';\nimport InputMask from 'react-input-mask';\nimport Loading from '../../components/Loading';\nimport AuthFuncionarioContext from '../../contexts/auth-funcionario';\nexport default function LoginFuncionario() {\n  const [valores, setValores] = useState({});\n  const [isLoadingVisible, setLoadingVisible] = useState(false);\n  const {\n    signIn\n  } = useContext(AuthFuncionarioContext);\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  useEffect(() => {}, [isLoadingVisible]);\n\n  const onSubmit = data => {\n    setValores(data);\n    loginFuncionario(data);\n  };\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setValores({ ...valores,\n      [name]: value\n    });\n  }\n\n  async function loginFuncionario(credentials) {\n    setLoadingVisible(true);\n    const response = await signIn(credentials);\n\n    if (response.status === 200 || response.status === 201) {\n      const listaEstabelecimentos = response.data.listaEstab;\n      const {\n        value: fruit\n      } = await Swal.fire({\n        title: 'Selecione o Estabelecimento',\n        input: 'select',\n        inputOptions: listaEstabelecimentos,\n        inputPlaceholder: 'Selecione',\n        showCancelButton: true,\n        inputValidator: value => {\n          return new Promise(resolve => {\n            if (value === 'oranges') {\n              resolve();\n            } else {\n              resolve('You need to select oranges :)');\n            }\n          });\n        }\n      });\n\n      if (fruit) {\n        Swal.fire(`You selected: ${fruit}`);\n      } //history.push('/painel-funcionario');\n\n    } else if (response.status === 401) {\n      Swal.fire({\n        title: 'Erro!',\n        text: 'Usuário ou senha inválidos',\n        icon: 'error',\n        confirmButtonText: 'Voltar'\n      });\n    } else {\n      Swal.fire({\n        title: 'Erro!',\n        text: 'Falha ao efetuar login.',\n        icon: 'error',\n        confirmButtonText: 'Voltar'\n      });\n    }\n\n    setLoadingVisible(false);\n  }\n\n  function SelecionaEstabelecimento(data) {\n    if (data.listaEstab.length >= 1) {}\n\n    ;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hold-transition login-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"../../index2.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 49\n    }\n  }, \"Tingle\"), \"Bar\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body login-card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"login-box-msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"Login de Funcion\\xE1rio\"), /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputMask, {\n    type: \"text\",\n    className: errors.cnpj ? \"form-control is-invalid\" : \"form-control\",\n    placeholder: \"Telefone\",\n    name: \"telefone\",\n    onChange: handleChange,\n    mask: \"(99) 99999-9999\",\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"O Telefone é obrigatório\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, errors.cnpj && errors.cnpj.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: errors.senha ? \"form-control is-invalid\" : \"form-control\",\n    placeholder: \"Senha\",\n    name: \"senha\",\n    onChange: handleChange,\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"A senha é obrigatória\"\n      },\n      pattern: {\n        //value: /(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, // Mínimo de oito caracteres, pelo menos uma letra e um número\n        message: \"Mínimo de oito caracteres, com pelo menos uma letra e um número\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fas fa-lock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }, errors.senha && errors.senha.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-3 col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 37\n    }\n  }, \"Acessar\")))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"forgot-password.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, \"Esqueci minha senha\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"register.html\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, \"Cadastrar um novo funcionario\"))))), isLoadingVisible ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }) : null);\n}","map":{"version":3,"sources":["/home/roberto/Área de Trabalho/tingle-bar/src/pages/LoginFuncionario/index.jsx"],"names":["React","useState","useEffect","useContext","useForm","Swal","useHistory","InputMask","Loading","AuthFuncionarioContext","LoginFuncionario","valores","setValores","isLoadingVisible","setLoadingVisible","signIn","history","register","handleSubmit","errors","onSubmit","data","loginFuncionario","handleChange","event","name","value","target","credentials","response","status","listaEstabelecimentos","listaEstab","fruit","fire","title","input","inputOptions","inputPlaceholder","showCancelButton","inputValidator","Promise","resolve","text","icon","confirmButtonText","SelecionaEstabelecimento","length","cnpj","required","message","senha","pattern"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { useForm } from \"react-hook-form\";\nimport Swal from 'sweetalert2';\nimport { useHistory } from 'react-router-dom';\nimport InputMask from 'react-input-mask';\n\nimport Loading from '../../components/Loading';\nimport AuthFuncionarioContext from '../../contexts/auth-funcionario';\n\nexport default function LoginFuncionario() {\n    const [valores, setValores] = useState({});\n    const [isLoadingVisible, setLoadingVisible] = useState(false);\n    const { signIn } = useContext(AuthFuncionarioContext);\n\n    const history = useHistory();\n    const { register, handleSubmit, errors } = useForm();\n\n    useEffect(() => { }, [isLoadingVisible]);\n\n    const onSubmit = data => {\n        setValores(data);\n        loginFuncionario(data);\n    };\n\n    function handleChange(event) {\n        const { name, value } = event.target;\n        setValores({ ...valores, [name]: value });\n    }\n\n    async function loginFuncionario(credentials) {\n        setLoadingVisible(true);\n\n        const response = await signIn(credentials);\n\n        if (response.status === 200 || response.status === 201) {\n           const listaEstabelecimentos = response.data.listaEstab;\n\n            const { value: fruit } = await Swal.fire({\n                title: 'Selecione o Estabelecimento',\n                input: 'select',\n                inputOptions: listaEstabelecimentos,\n                inputPlaceholder: 'Selecione',\n                showCancelButton: true,\n                inputValidator: (value) => {\n                  return new Promise((resolve) => {\n                    if (value === 'oranges') {\n                      resolve()\n                    } else {\n                      resolve('You need to select oranges :)')\n                    }\n                  })\n                }\n              })\n              \n              if (fruit) {\n                Swal.fire(`You selected: ${fruit}`)\n              }\n\n            //history.push('/painel-funcionario');\n        } else if (response.status === 401) {\n            Swal.fire({\n                title: 'Erro!',\n                text: 'Usuário ou senha inválidos',\n                icon: 'error',\n                confirmButtonText: 'Voltar'\n            });\n        } else {\n            Swal.fire({\n                title: 'Erro!',\n                text: 'Falha ao efetuar login.',\n                icon: 'error',\n                confirmButtonText: 'Voltar'\n            });\n        }\n\n        setLoadingVisible(false);\n    }\n\n    function SelecionaEstabelecimento(data) {\n\n        if (data.listaEstab.length >= 1) {\n\n        };\n    }\n    return (\n        <div className=\"hold-transition login-page\">\n            <div className=\"login-box\">\n                <div className=\"login-logo\">\n                    <a href=\"../../index2.html\"><b>Tingle</b>Bar</a>\n                </div>\n                {/* /.login-logo */}\n                <div className=\"card\">\n                    <div className=\"card-body login-card-body\">\n                        <p className=\"login-box-msg\">Login de Funcionário</p>\n\n                        <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n\n                            <div className=\"input-group mb-3\">\n                                <InputMask\n                                    type=\"text\"\n                                    className={errors.cnpj ? \"form-control is-invalid\" : \"form-control\"}\n                                    placeholder=\"Telefone\"\n                                    name=\"telefone\"\n                                    onChange={handleChange}\n                                    mask=\"(99) 99999-9999\"\n                                    ref={register({\n                                        required: {\n                                            value: \"Required\",\n                                            message: \"O Telefone é obrigatório\"\n                                        }\n                                    })}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-user\" />\n                                    </div>\n                                </div>\n                                <span className=\"error invalid-feedback\">{errors.cnpj && errors.cnpj.message}</span>\n                            </div>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    type=\"password\"\n                                    className={errors.senha ? \"form-control is-invalid\" : \"form-control\"}\n                                    placeholder=\"Senha\"\n                                    name=\"senha\"\n                                    onChange={handleChange}\n                                    ref={register({\n                                        required: {\n                                            value: \"Required\",\n                                            message: \"A senha é obrigatória\"\n                                        },\n                                        pattern: {\n                                            //value: /(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, // Mínimo de oito caracteres, pelo menos uma letra e um número\n                                            message: \"Mínimo de oito caracteres, com pelo menos uma letra e um número\"\n                                        }\n                                    })}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-lock\" />\n                                    </div>\n                                </div>\n                                <span className=\"error invalid-feedback\">{errors.senha && errors.senha.message}</span>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"input-group mb-3 col-md-12\">\n                                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Acessar</button>\n                                </div>\n                                {/* /.col */}\n                            </div>\n                        </form>\n\n                        <p className=\"mb-1\">\n                            <a href=\"forgot-password.html\">Esqueci minha senha</a>\n                        </p>\n                        <p className=\"mb-0\">\n                            <a href=\"register.html\" className=\"text-center\">Cadastrar um novo funcionario</a>\n                        </p>\n                    </div>\n                    {/* /.login-card-body */}\n                </div>\n            </div>\n            {/* /.login-box */}\n\n            {isLoadingVisible ? <Loading /> : null}\n        </div>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}