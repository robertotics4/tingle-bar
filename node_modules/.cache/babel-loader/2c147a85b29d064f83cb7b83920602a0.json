{"ast":null,"code":"var _jsxFileName = \"/home/roberto/\\xC1rea de Trabalho/tingle-bar/src/pages/LoginEstabelecimento/index.jsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport Swal from 'sweetalert2';\nimport InputMask from 'react-input-mask';\nimport AuthEstabelecimentoContext from '../../contexts/auth-estabelecimento';\nimport api from '../../services/api';\nimport Loading from '../../components/Loading';\nexport default function LoginEstabelecimento() {\n  const [valores, setValores] = useState({});\n  const [isLoadingVisible, setLoadingVisible] = useState(false);\n  const {\n    signed,\n    signIn\n  } = useContext(AuthEstabelecimentoContext);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  useEffect(() => {}, [isLoadingVisible]);\n\n  const onSubmit = data => {\n    setValores(data);\n    console.log(data);\n    const credentials = {\n      \"Cnpj\": valores.cnpj,\n      \"Senha\": valores.senha\n    };\n    loginEstabelecimento(credentials);\n  };\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setValores({ ...valores,\n      [name]: value\n    });\n  }\n\n  async function loginEstabelecimento(credentials) {\n    setLoadingVisible(true);\n    let resposta = null;\n    signIn(credentials); // try {\n    //     resposta = await api.post('/api/loginestabelecimento', payload);\n    //     if (resposta.status === 200 || resposta.status === 201) {\n    //         Swal.fire({\n    //             title: 'Sucesso!',\n    //             text: 'Login efetuado com sucesso',\n    //             icon: 'success',\n    //             confirmButtonText: 'OK'\n    //         });\n    //         setValores({});\n    //     }\n    // } catch (err) {\n    //     const statusCode = err.response.status;\n    //     if (statusCode === 401)\n    //         Swal.fire({\n    //             title: 'Erro!',\n    //             text: 'Usuário ou senha inválidos',\n    //             icon: 'error',\n    //             confirmButtonText: 'Voltar'\n    //         });\n    //     else\n    //         Swal.fire({\n    //             title: 'Erro!',\n    //             text: 'Falha ao efetuar login.',\n    //             icon: 'error',\n    //             confirmButtonText: 'Voltar'\n    //         });\n    // } finally {\n    //     setLoadingVisible(false);\n    // }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hold-transition login-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"../../index2.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 49\n    }\n  }, \"Tingle\"), \"Bar\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body login-card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"login-box-msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, \"Login de Estabelecimento\"), /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputMask, {\n    type: \"text\",\n    className: errors.cnpj ? \"form-control is-invalid\" : \"form-control\",\n    placeholder: \"CNPJ\",\n    name: \"cnpj\",\n    onChange: handleChange,\n    mask: \"99.999.999/9999-99\",\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"O CNPJ é obrigatório\"\n      },\n      pattern: {\n        value: /^\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}-\\d{2}$/,\n        message: \"CNPJ inválido\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, errors.cnpj && errors.cnpj.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: errors.senha ? \"form-control is-invalid\" : \"form-control\",\n    placeholder: \"Senha\",\n    name: \"senha\",\n    onChange: handleChange,\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"A senha é obrigatória\"\n      },\n      pattern: {\n        value: /(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n        // Mínimo de oito caracteres, pelo menos uma letra e um número\n        message: \"Mínimo de oito caracteres, com pelo menos uma letra e um número\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fas fa-lock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 33\n    }\n  }, errors.senha && errors.senha.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-3 col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 37\n    }\n  }, \"Acessar\")))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"forgot-password.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, \"Esqueci minha senha\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"register.html\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, \"Cadastrar um novo estabelecimento\"))))), isLoadingVisible ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 33\n    }\n  }) : null);\n}","map":{"version":3,"sources":["/home/roberto/Área de Trabalho/tingle-bar/src/pages/LoginEstabelecimento/index.jsx"],"names":["React","useState","useEffect","useContext","useForm","Swal","InputMask","AuthEstabelecimentoContext","api","Loading","LoginEstabelecimento","valores","setValores","isLoadingVisible","setLoadingVisible","signed","signIn","register","handleSubmit","errors","onSubmit","data","console","log","credentials","cnpj","senha","loginEstabelecimento","handleChange","event","name","value","target","resposta","required","message","pattern"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport Swal from 'sweetalert2';\nimport InputMask from 'react-input-mask';\n\nimport AuthEstabelecimentoContext from '../../contexts/auth-estabelecimento';\nimport api from '../../services/api';\nimport Loading from '../../components/Loading';\n\nexport default function LoginEstabelecimento() {\n    const [valores, setValores] = useState({});\n    const [isLoadingVisible, setLoadingVisible] = useState(false);\n    const { signed, signIn } = useContext(AuthEstabelecimentoContext);\n\n    const { register, handleSubmit, errors } = useForm();\n\n    useEffect(() => { }, [isLoadingVisible]);\n\n    const onSubmit = data => {\n        setValores(data);\n\n        console.log(data);\n        const credentials = {\n            \"Cnpj\": valores.cnpj,\n            \"Senha\": valores.senha\n        }\n\n        loginEstabelecimento(credentials);\n    };\n\n    function handleChange(event) {\n        const { name, value } = event.target;\n        setValores({ ...valores, [name]: value });\n    }\n\n    async function loginEstabelecimento(credentials) {\n        setLoadingVisible(true);\n        let resposta = null;\n\n        signIn(credentials);\n\n        // try {\n        //     resposta = await api.post('/api/loginestabelecimento', payload);\n\n        //     if (resposta.status === 200 || resposta.status === 201) {\n        //         Swal.fire({\n        //             title: 'Sucesso!',\n        //             text: 'Login efetuado com sucesso',\n        //             icon: 'success',\n        //             confirmButtonText: 'OK'\n        //         });\n\n        //         setValores({});\n        //     }\n\n        // } catch (err) {\n        //     const statusCode = err.response.status;\n\n        //     if (statusCode === 401)\n        //         Swal.fire({\n        //             title: 'Erro!',\n        //             text: 'Usuário ou senha inválidos',\n        //             icon: 'error',\n        //             confirmButtonText: 'Voltar'\n        //         });\n        //     else\n        //         Swal.fire({\n        //             title: 'Erro!',\n        //             text: 'Falha ao efetuar login.',\n        //             icon: 'error',\n        //             confirmButtonText: 'Voltar'\n        //         });\n        // } finally {\n        //     setLoadingVisible(false);\n        // }\n    }\n\n    return (\n        <div className=\"hold-transition login-page\">\n            <div className=\"login-box\">\n                <div className=\"login-logo\">\n                    <a href=\"../../index2.html\"><b>Tingle</b>Bar</a>\n                </div>\n                {/* /.login-logo */}\n                <div className=\"card\">\n                    <div className=\"card-body login-card-body\">\n                        <p className=\"login-box-msg\">Login de Estabelecimento</p>\n\n                        <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n\n                            <div className=\"input-group mb-3\">\n                                <InputMask\n                                    type=\"text\"\n                                    className={errors.cnpj ? \"form-control is-invalid\" : \"form-control\"}\n                                    placeholder=\"CNPJ\"\n                                    name=\"cnpj\"\n                                    onChange={handleChange}\n                                    mask=\"99.999.999/9999-99\"\n                                    ref={register({\n                                        required: {\n                                            value: \"Required\",\n                                            message: \"O CNPJ é obrigatório\"\n                                        },\n                                        pattern: {\n                                            value: /^\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}-\\d{2}$/,\n                                            message: \"CNPJ inválido\"\n                                        }\n                                    })}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-user\" />\n                                    </div>\n                                </div>\n                                <span className=\"error invalid-feedback\">{errors.cnpj && errors.cnpj.message}</span>\n                            </div>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    type=\"password\"\n                                    className={errors.senha ? \"form-control is-invalid\" : \"form-control\"}\n                                    placeholder=\"Senha\"\n                                    name=\"senha\"\n                                    onChange={handleChange}\n                                    ref={register({\n                                        required: {\n                                            value: \"Required\",\n                                            message: \"A senha é obrigatória\"\n                                        },\n                                        pattern: {\n                                            value: /(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, // Mínimo de oito caracteres, pelo menos uma letra e um número\n                                            message: \"Mínimo de oito caracteres, com pelo menos uma letra e um número\"\n                                        }\n                                    })}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-lock\" />\n                                    </div>\n                                </div>\n                                <span className=\"error invalid-feedback\">{errors.senha && errors.senha.message}</span>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"input-group mb-3 col-md-12\">\n                                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Acessar</button>\n                                </div>\n                                {/* /.col */}\n                            </div>\n                        </form>\n\n                        <p className=\"mb-1\">\n                            <a href=\"forgot-password.html\">Esqueci minha senha</a>\n                        </p>\n                        <p className=\"mb-0\">\n                            <a href=\"register.html\" className=\"text-center\">Cadastrar um novo estabelecimento</a>\n                        </p>\n                    </div>\n                    {/* /.login-card-body */}\n                </div>\n            </div>\n            {/* /.login-box */}\n\n            {isLoadingVisible ? <Loading /> : null}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}