{"ast":null,"code":"var _jsxFileName = \"/home/roberto/\\xC1rea de Trabalho/tingle-bar/src/pages/LoginFuncionario/index.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport Swal from 'sweetalert2';\nimport InputMask from 'react-input-mask';\nimport api from '../../services/api';\nimport Loading from '../../components/Loading';\nexport default function LoginFuncionario() {\n  const [valores, setValores] = useState({});\n  const [isLoadingVisible, setLoadingVisible] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  useEffect(() => {}, [isLoadingVisible]);\n\n  const onSubmit = data => {\n    setValores(data);\n    loginFuncionario();\n  };\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setValores({ ...valores,\n      [name]: value\n    });\n  }\n\n  async function loginFuncionario() {\n    setLoadingVisible(true);\n    let resposta = null;\n    const payload = {\n      \"Telefone\": valores.telefone,\n      \"Senha\": valores.senha\n    };\n\n    try {\n      resposta = await api.post('/api/loginfuncionario', payload);\n\n      if (resposta.status === 200 || resposta.status === 201) {\n        Swal.fire({\n          title: 'Sucesso!',\n          text: 'Login efetuado com sucesso',\n          icon: 'success',\n          confirmButtonText: 'OK'\n        });\n        setValores({});\n        console.log(resposta.data);\n        SelecionaEstabelecimento(resposta.data);\n      }\n    } catch (err) {\n      Swal.fire({\n        title: 'Erro!',\n        text: 'Falha ao efetuar login.',\n        icon: 'error',\n        confirmButtonText: 'Voltar'\n      });\n    } finally {\n      setLoadingVisible(false);\n    }\n  }\n\n  function SelecionaEstabelecimento(data) {\n    if (data.listaEstab.length >= 1) {\n      console.log('mais de um');\n    }\n\n    ;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hold-transition login-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"../../index2.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 49\n    }\n  }, \"Tingle\"), \"Bar\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body login-card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"login-box-msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"Login de Funcion\\xE1rio\"), /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputMask, {\n    type: \"text\",\n    className: errors.cnpj ? \"form-control is-invalid\" : \"form-control\",\n    placeholder: \"Telefone\",\n    name: \"telefone\",\n    onChange: handleChange,\n    mask: \"(99) 99999-9999\",\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"O Telefone é obrigatório\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, errors.cnpj && errors.cnpj.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: errors.senha ? \"form-control is-invalid\" : \"form-control\",\n    placeholder: \"Senha\",\n    name: \"senha\",\n    onChange: handleChange,\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"A senha é obrigatória\"\n      },\n      pattern: {\n        //value: /(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, // Mínimo de oito caracteres, pelo menos uma letra e um número\n        message: \"Mínimo de oito caracteres, com pelo menos uma letra e um número\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fas fa-lock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }, errors.senha && errors.senha.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-3 col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 37\n    }\n  }, \"Acessar\")))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"forgot-password.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, \"Esqueci minha senha\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"register.html\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }, \"Cadastrar um novo funcionario\"))))), isLoadingVisible ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }\n  }) : null);\n}","map":{"version":3,"sources":["/home/roberto/Área de Trabalho/tingle-bar/src/pages/LoginFuncionario/index.jsx"],"names":["React","useState","useEffect","useForm","Swal","InputMask","api","Loading","LoginFuncionario","valores","setValores","isLoadingVisible","setLoadingVisible","register","handleSubmit","errors","onSubmit","data","loginFuncionario","handleChange","event","name","value","target","resposta","payload","telefone","senha","post","status","fire","title","text","icon","confirmButtonText","console","log","SelecionaEstabelecimento","err","listaEstab","length","cnpj","required","message","pattern"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useForm } from \"react-hook-form\";\nimport Swal from 'sweetalert2';\nimport InputMask from 'react-input-mask';\n\nimport api from '../../services/api';\nimport Loading from '../../components/Loading';\n\nexport default function LoginFuncionario() {\n    const [valores, setValores] = useState({});\n    const [isLoadingVisible, setLoadingVisible] = useState(false);\n\n    const { register, handleSubmit, errors } = useForm();\n\n    useEffect(() => { }, [isLoadingVisible]);\n\n    const onSubmit = data => {\n        setValores(data);\n        loginFuncionario();\n    };\n\n    function handleChange(event) {\n        const { name, value } = event.target;\n        setValores({ ...valores, [name]: value });\n    }\n\n    async function loginFuncionario() {\n        setLoadingVisible(true);\n        let resposta = null;\n\n        const payload = {\n            \"Telefone\": valores.telefone,\n            \"Senha\": valores.senha\n        }\n\n        try {\n            resposta = await api.post('/api/loginfuncionario', payload);\n\n            if (resposta.status === 200 || resposta.status === 201) {\n                Swal.fire({\n                    title: 'Sucesso!',\n                    text: 'Login efetuado com sucesso',\n                    icon: 'success',\n                    confirmButtonText: 'OK'\n                });\n\n                setValores({});\n                console.log(resposta.data);\n                SelecionaEstabelecimento(resposta.data)\n            }\n\n        } catch (err) {\n            Swal.fire({\n                title: 'Erro!',\n                text: 'Falha ao efetuar login.',\n                icon: 'error',\n                confirmButtonText: 'Voltar'\n            });\n        } finally {\n            setLoadingVisible(false);\n        }\n    }\n\n    function SelecionaEstabelecimento(data) {\n\n        if (data.listaEstab.length >= 1) {\n\n            console.log('mais de um');\n\n\n        };\n    }\n    return (\n\n        <div className=\"hold-transition login-page\">\n            <div className=\"login-box\">\n                <div className=\"login-logo\">\n                    <a href=\"../../index2.html\"><b>Tingle</b>Bar</a>\n                </div>\n                {/* /.login-logo */}\n                <div className=\"card\">\n                    <div className=\"card-body login-card-body\">\n                        <p className=\"login-box-msg\">Login de Funcionário</p>\n\n                        <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n\n                            <div className=\"input-group mb-3\">\n                                <InputMask\n                                    type=\"text\"\n                                    className={errors.cnpj ? \"form-control is-invalid\" : \"form-control\"}\n                                    placeholder=\"Telefone\"\n                                    name=\"telefone\"\n                                    onChange={handleChange}\n                                    mask=\"(99) 99999-9999\"\n                                    ref={register({\n                                        required: {\n                                            value: \"Required\",\n                                            message: \"O Telefone é obrigatório\"\n                                        }\n                                    })}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-user\" />\n                                    </div>\n                                </div>\n                                <span className=\"error invalid-feedback\">{errors.cnpj && errors.cnpj.message}</span>\n                            </div>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    type=\"password\"\n                                    className={errors.senha ? \"form-control is-invalid\" : \"form-control\"}\n                                    placeholder=\"Senha\"\n                                    name=\"senha\"\n                                    onChange={handleChange}\n                                    ref={register({\n                                        required: {\n                                            value: \"Required\",\n                                            message: \"A senha é obrigatória\"\n                                        },\n                                        pattern: {\n                                            //value: /(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, // Mínimo de oito caracteres, pelo menos uma letra e um número\n                                            message: \"Mínimo de oito caracteres, com pelo menos uma letra e um número\"\n                                        }\n                                    })}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-lock\" />\n                                    </div>\n                                </div>\n                                <span className=\"error invalid-feedback\">{errors.senha && errors.senha.message}</span>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"input-group mb-3 col-md-12\">\n                                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Acessar</button>\n                                </div>\n                                {/* /.col */}\n                            </div>\n                        </form>\n\n                        <p className=\"mb-1\">\n                            <a href=\"forgot-password.html\">Esqueci minha senha</a>\n                        </p>\n                        <p className=\"mb-0\">\n                            <a href=\"register.html\" className=\"text-center\">Cadastrar um novo funcionario</a>\n                        </p>\n                    </div>\n                    {/* /.login-card-body */}\n                </div>\n            </div>\n            {/* /.login-box */}\n\n            {isLoadingVisible ? <Loading /> : null}\n        </div>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}