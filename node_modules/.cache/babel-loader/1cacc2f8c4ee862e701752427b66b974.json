{"ast":null,"code":"var _jsxFileName = \"/home/roberto/\\xC1rea de Trabalho/tingle-bar/src/pages/PainelEstabelecimento/pages/GerenciarCardapio/ModalCadCardapio.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport CurrencyInput from 'react-currency-input';\nimport Swal from 'sweetalert2';\nimport fs from 'fs';\nimport './styles/ModalCadCardapio.css';\nimport api from '../../../../services/api';\n\nfunction initialState() {\n  return {\n    titulo: '',\n    descricao: '',\n    valor: '',\n    categoria: '',\n    tempoEstimadoMin: 0,\n    tempoEstimadoMax: 0,\n    imagem: null,\n    isCozinha: false,\n    isCardapio: true\n  };\n}\n\nexport default function ModalCadCardapio(props) {\n  const [categorias, setCategorias] = useState([]);\n  const [valores, setValores] = useState(initialState);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    cadastrarItem(data);\n  };\n\n  useEffect(() => {\n    getCategorias();\n  }, []);\n\n  async function getCategorias() {\n    try {\n      const response = await api.get('/categoria?idEstabelecimento=' + props.idEstabelecimento);\n      setCategorias(response.data);\n      return response.data;\n    } catch (err) {\n      return err.response;\n    }\n  }\n\n  async function cadastrarItem(dados) {\n    const formData = new FormData();\n    formData.append(\"titulo\", dados.titulo);\n    formData.append(\"descricao\", dados.descricao);\n    formData.append(\"valor\", valores.valor);\n    formData.append(\"tempo_estimado_min\", dados.tempoEstimadoMin);\n    formData.append(\"tempo_estimado_max\", dados.tempoEstimadoMax);\n    formData.append(\"categoria\", dados.categoria);\n    formData.append(\"iscozinha\", valores.isCozinha);\n    formData.append(\"files\", dados.imagem);\n    formData.append(\"estabelecimento\", props.idEstabelecimento);\n    formData.append(\"iscardapio\", valores.isCardapio);\n\n    try {\n      const response = await api.post('/Cardapio', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log({\n        response\n      });\n\n      if (response.status === 201 || response.status === 200) {\n        Swal.fire('Sucesso!', 'Item cadastrado com sucesso!', 'success');\n      }\n    } catch (err) {\n      if (err.response.status === 401 || err.response.status === 400) {\n        Swal.fire('Erro!', 'Falha ao cadastrar item', 'error');\n      }\n    }\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setValores({ ...valores,\n      [name]: value\n    });\n  }\n\n  function handleChangeValor(event, maskedValue, floatValue) {\n    setValores({ ...valores,\n      valor: floatValue\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cad-cardapio-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card card-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"Cadastro de item no Card\\xE1pio\")), /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"tituloItemCardapio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, \"T\\xEDtulo\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"titulo\",\n    type: \"text\",\n    className: errors.titulo ? \"form-control is-invalid\" : \"form-control\",\n    id: \"tituloItemCardapio\",\n    placeholder: \"T\\xEDtulo do item\",\n    onChange: handleChange,\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"O título é obrigatório\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, errors.titulo && errors.titulo.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"descricaoItemCardapio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"descricao\",\n    type: \"text\",\n    className: errors.descricao ? \"form-control is-invalid\" : \"form-control\",\n    id: \"descricaoItemCardapio\",\n    placeholder: \"Descri\\xE7\\xE3o do item\",\n    onChange: handleChange,\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"A descrição é obrigatória\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, errors.descricao && errors.descricao.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"valorItemCardapio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, \"Valor\"), /*#__PURE__*/React.createElement(CurrencyInput, {\n    name: \"valor\",\n    type: \"text\",\n    prefix: \"R$\",\n    decimalSeparator: \",\",\n    thousandSeparator: \".\",\n    value: valores.valor,\n    className: errors.valor ? \"form-control is-invalid\" : \"form-control\",\n    id: \"valorItemCardapio\",\n    onChangeEvent: handleChangeValor // ref={register({\n    //     required: {\n    //         value: \"Required\",\n    //         message: \"O valor é obrigatório\"\n    //     },\n    // })}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, errors.valorItemCardapio && errors.valorItemCardapio.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"categoriaItemCardapio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, \"Categoria\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"categoria\",\n    className: errors.categoria ? \"form-control is-invalid\" : \"form-control\",\n    id: \"categoriaItemCardapio\",\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"A categoria é obrigatória\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 33\n    }\n  }, \"Selecione\"), categorias.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: item.id,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 37\n    }\n  }, item.descricao))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, errors.categoria && errors.categoria.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"descricaoItemCardapio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  }, \"Tempo estimado m\\xEDnimo\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"tempoEstimadoMin\",\n    type: \"number\",\n    className: errors.tempoEstimadoMin ? \"form-control is-invalid\" : \"form-control\",\n    id: \"tempoEstimadoMin\",\n    placeholder: \"Tempo m\\xEDnimo estimado\",\n    onChange: handleChange,\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"O tempo estimado min é obrigatório\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 29\n    }\n  }, errors.tempoEstimadoMin && errors.tempoEstimadoMin.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"descricaoItemCardapio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  }, \"Tempo estimado m\\xE1ximo\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"tempoEstimadoMax\",\n    type: \"number\",\n    className: errors.tempoEstimadoMax ? \"form-control is-invalid\" : \"form-control\",\n    id: \"tempoEstimadoMax\",\n    placeholder: \"Tempo m\\xEDnimo m\\xE1ximo\",\n    onChange: handleChange,\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"O tempo estimado max é obrigatório\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }\n  }, errors.tempoEstimadoMax && errors.tempoEstimadoMax.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"imagemItemCardapio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 29\n    }\n  }, \"Imagem do item\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"imagem\",\n    type: \"file\",\n    accept: \".jpg,.png\",\n    className: errors.imagem ? \"form-control-file is-invalid\" : \"form-control-file\",\n    id: \"imagemItemCardapio\",\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"A imagem é obrigatória\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 29\n    }\n  }, errors.imagem && errors.imagem.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"isCozinha\",\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    id: \"itemCozinhaCardapio\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"exampleCheck1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 29\n    }\n  }, \"Item de cozinha ?\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"isCardapio\",\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    id: \"isCardapio\",\n    onChange: handleChange,\n    defaultChecked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"exampleCheck1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 29\n    }\n  }, \"Incluir no card\\xE1pio ?\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 25\n    }\n  }, \"Cadastrar\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-secondary ml-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 25\n    }\n  }, \"Cancelar\")))));\n}","map":{"version":3,"sources":["/home/roberto/Área de Trabalho/tingle-bar/src/pages/PainelEstabelecimento/pages/GerenciarCardapio/ModalCadCardapio.jsx"],"names":["React","useState","useEffect","useForm","CurrencyInput","Swal","fs","api","initialState","titulo","descricao","valor","categoria","tempoEstimadoMin","tempoEstimadoMax","imagem","isCozinha","isCardapio","ModalCadCardapio","props","categorias","setCategorias","valores","setValores","register","handleSubmit","errors","onSubmit","data","cadastrarItem","getCategorias","response","get","idEstabelecimento","err","dados","formData","FormData","append","post","headers","console","log","status","fire","handleChange","event","name","value","target","handleChangeValor","maskedValue","floatValue","required","message","valorItemCardapio","map","item","index","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport CurrencyInput from 'react-currency-input';\nimport Swal from 'sweetalert2';\nimport fs from 'fs';\n\nimport './styles/ModalCadCardapio.css';\n\nimport api from '../../../../services/api';\n\nfunction initialState() {\n    return {\n        titulo: '',\n        descricao: '',\n        valor: '',\n        categoria: '',\n        tempoEstimadoMin: 0,\n        tempoEstimadoMax: 0,\n        imagem: null,\n        isCozinha: false,\n        isCardapio: true\n    };\n}\n\nexport default function ModalCadCardapio(props) {\n    const [categorias, setCategorias] = useState([]);\n    const [valores, setValores] = useState(initialState);\n\n    const { register, handleSubmit, errors } = useForm();\n\n    const onSubmit = data => {\n        cadastrarItem(data);\n    };\n\n    useEffect(() => {\n        getCategorias();\n    }, [])\n\n    async function getCategorias() {\n        try {\n            const response = await api.get('/categoria?idEstabelecimento=' + props.idEstabelecimento);\n            setCategorias(response.data);\n            return response.data;\n        } catch (err) {\n            return err.response;\n        }\n    }\n\n    async function cadastrarItem(dados) {\n        const formData = new FormData();\n\n        formData.append(\"titulo\", dados.titulo);\n        formData.append(\"descricao\", dados.descricao);\n        formData.append(\"valor\", valores.valor);\n        formData.append(\"tempo_estimado_min\", dados.tempoEstimadoMin);\n        formData.append(\"tempo_estimado_max\", dados.tempoEstimadoMax);\n        formData.append(\"categoria\", dados.categoria);\n        formData.append(\"iscozinha\", valores.isCozinha);\n        formData.append(\"files\", dados.imagem);\n        formData.append(\"estabelecimento\", props.idEstabelecimento);\n        formData.append(\"iscardapio\", valores.isCardapio);\n\n        try {\n            const response = await api.post('/Cardapio', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            });\n\n            console.log({ response });\n\n            if (response.status === 201 || response.status === 200) {\n                Swal.fire('Sucesso!', 'Item cadastrado com sucesso!', 'success');\n            }\n        } catch (err) {\n            if (err.response.status === 401 || err.response.status === 400) {\n                Swal.fire('Erro!', 'Falha ao cadastrar item', 'error');\n            }\n        }\n    }\n\n    function handleChange(event) {\n        const { name, value } = event.target;\n        setValores({ ...valores, [name]: value });\n    }\n\n    function handleChangeValor(event, maskedValue, floatValue) {\n        setValores({ ...valores, valor: floatValue });\n    }\n\n    return (\n        <div className=\"cad-cardapio-modal\">\n            <div className=\"card card-primary\">\n                <div className=\"card-header\">\n                    <h3 className=\"card-title\">Cadastro de item no Cardápio</h3>\n                </div>\n                {/* /.card-header */}\n                {/* form start */}\n\n                <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"card-body\">\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"tituloItemCardapio\">Título</label>\n                            <input\n                                name=\"titulo\"\n                                type=\"text\"\n                                className={errors.titulo ? \"form-control is-invalid\" : \"form-control\"}\n                                id=\"tituloItemCardapio\"\n                                placeholder=\"Título do item\"\n                                onChange={handleChange}\n                                ref={register({\n                                    required: {\n                                        value: \"Required\",\n                                        message: \"O título é obrigatório\"\n                                    },\n                                })}\n                            />\n                            <span className=\"error invalid-feedback\">{errors.titulo && errors.titulo.message}</span>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"descricaoItemCardapio\">Descrição</label>\n                            <input\n                                name=\"descricao\"\n                                type=\"text\"\n                                className={errors.descricao ? \"form-control is-invalid\" : \"form-control\"}\n                                id=\"descricaoItemCardapio\"\n                                placeholder=\"Descrição do item\"\n                                onChange={handleChange}\n                                ref={register({\n                                    required: {\n                                        value: \"Required\",\n                                        message: \"A descrição é obrigatória\"\n                                    },\n                                })}\n                            />\n                            <span className=\"error invalid-feedback\">{errors.descricao && errors.descricao.message}</span>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"valorItemCardapio\">Valor</label>\n                            <CurrencyInput\n                                name=\"valor\"\n                                type=\"text\"\n                                prefix=\"R$\"\n                                decimalSeparator=\",\"\n                                thousandSeparator=\".\"\n                                value={valores.valor}\n                                className={errors.valor ? \"form-control is-invalid\" : \"form-control\"}\n                                id=\"valorItemCardapio\"\n                                onChangeEvent={handleChangeValor}\n                            // ref={register({\n                            //     required: {\n                            //         value: \"Required\",\n                            //         message: \"O valor é obrigatório\"\n                            //     },\n                            // })}\n                            />\n                            <span className=\"error invalid-feedback\">{errors.valorItemCardapio && errors.valorItemCardapio.message}</span>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"categoriaItemCardapio\">Categoria</label>\n                            <select\n                                name=\"categoria\"\n                                className={errors.categoria ? \"form-control is-invalid\" : \"form-control\"}\n                                id=\"categoriaItemCardapio\"\n                                ref={register({\n                                    required: {\n                                        value: \"Required\",\n                                        message: \"A categoria é obrigatória\"\n                                    },\n                                })}\n                            >\n                                <option value=\"\">Selecione</option>\n                                {categorias.map((item, index) => (\n                                    <option key={item.id} value={item.id}>{item.descricao}</option>\n                                ))}\n                            </select>\n                            <span className=\"error invalid-feedback\">{errors.categoria && errors.categoria.message}</span>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"descricaoItemCardapio\">Tempo estimado mínimo</label>\n                            <input\n                                name=\"tempoEstimadoMin\"\n                                type=\"number\"\n                                className={errors.tempoEstimadoMin ? \"form-control is-invalid\" : \"form-control\"}\n                                id=\"tempoEstimadoMin\"\n                                placeholder=\"Tempo mínimo estimado\"\n                                onChange={handleChange}\n                                ref={register({\n                                    required: {\n                                        value: \"Required\",\n                                        message: \"O tempo estimado min é obrigatório\"\n                                    },\n                                })}\n                            />\n                            <span className=\"error invalid-feedback\">{errors.tempoEstimadoMin && errors.tempoEstimadoMin.message}</span>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"descricaoItemCardapio\">Tempo estimado máximo</label>\n                            <input\n                                name=\"tempoEstimadoMax\"\n                                type=\"number\"\n                                className={errors.tempoEstimadoMax ? \"form-control is-invalid\" : \"form-control\"}\n                                id=\"tempoEstimadoMax\"\n                                placeholder=\"Tempo mínimo máximo\"\n                                onChange={handleChange}\n                                ref={register({\n                                    required: {\n                                        value: \"Required\",\n                                        message: \"O tempo estimado max é obrigatório\"\n                                    },\n                                })}\n                            />\n                            <span className=\"error invalid-feedback\">{errors.tempoEstimadoMax && errors.tempoEstimadoMax.message}</span>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"imagemItemCardapio\">Imagem do item</label>\n                            <input\n                                name=\"imagem\"\n                                type=\"file\"\n                                accept=\".jpg,.png\"\n                                className={errors.imagem ? \"form-control-file is-invalid\" : \"form-control-file\"}\n                                id=\"imagemItemCardapio\"\n                                ref={register({\n                                    required: {\n                                        value: \"Required\",\n                                        message: \"A imagem é obrigatória\"\n                                    },\n                                })}\n                            />\n                            <span className=\"error invalid-feedback\">{errors.imagem && errors.imagem.message}</span>\n                        </div>\n\n                        <div className=\"form-check\">\n                            <input\n                                name=\"isCozinha\"\n                                type=\"checkbox\"\n                                className=\"form-check-input\"\n                                id=\"itemCozinhaCardapio\"\n                                onChange={handleChange}\n                            />\n                            <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Item de cozinha ?</label>\n                        </div>\n\n                        <div className=\"form-check\">\n                            <input\n                                name=\"isCardapio\"\n                                type=\"checkbox\"\n                                className=\"form-check-input\"\n                                id=\"isCardapio\"\n                                onChange={handleChange}\n                                defaultChecked={true}\n                            />\n                            <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Incluir no cardápio ?</label>\n                        </div>\n\n                    </div>\n                    {/* /.card-body */}\n                    <div className=\"card-footer\">\n                        <button type=\"submit\" className=\"btn btn-primary\">Cadastrar</button>\n                        <button type=\"submit\" className=\"btn btn-secondary ml-3\">Cancelar</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}