{"ast":null,"code":"var _jsxFileName = \"/home/roberto/\\xC1rea de Trabalho/tingle-bar/src/pages/PainelEstabelecimento/pages/GerenciarCardapio/ModalCadCardapio.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport CurrencyInput from 'react-currency-input';\nimport './styles/ModalCadCardapio.css';\nimport api from '../../../../services/api';\nexport default function ModalCadCardapio(props) {\n  const [categorias, setCategorias] = useState([]);\n  const [valores, setValores] = useState({});\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    console.log(valores);\n  };\n\n  useEffect(() => {\n    getCategorias();\n  }, []);\n\n  async function getCategorias() {\n    try {\n      const response = await api.get('/categoria?idEstabelecimento=' + props.idEstabelecimento);\n      setCategorias(response.data);\n      return response.data;\n    } catch (err) {\n      return err.response;\n    }\n  }\n\n  async function cadastrarItem(dados) {\n    // const payload = {\n    //     titulo: dados.tituloItemCardapio,\n    //     descricao: dados.descricaoItemCardapio,\n    //     valor: valores.valor,\n    //     tempo_estimado_min\n    //     tempo_estimado_max\n    //     categoria: dados.categoriaItemCardapio\n    //     iscozinha: \n    //     files: dados.imagemItemCardapio\n    //     estabelecimento: props.idEstabelecimento\n    //     iscardapio\n    // }\n    try {\n      const response = await api.post('/Mesa', payload);\n\n      if (response.status === 201 || response.status === 200) {\n        Swal.fire('Sucesso!', 'Mesa cadastrada com sucesso!', 'success');\n        getMesas();\n      }\n    } catch (err) {\n      if (err.response.status === 401 || err.response.status === 400) {\n        Swal.fire('Erro!', 'Falha ao cadastrar mesa', 'error');\n      }\n    }\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setValores({ ...valores,\n      [name]: value\n    });\n  }\n\n  function handleChangeValor(event, maskedValue, floatValue) {\n    setValores({ ...valores,\n      valor: floatValue\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cad-cardapio-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card card-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Cadastro de item no Card\\xE1pio\")), /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    encType: \"multipart/form-data\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"tituloItemCardapio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, \"T\\xEDtulo\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"tituloItemCardapio\",\n    type: \"text\",\n    className: errors.tituloItemCardapio ? \"form-control is-invalid\" : \"form-control\",\n    id: \"tituloItemCardapio\",\n    placeholder: \"T\\xEDtulo do item\",\n    onChange: handleChange,\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"O título é obrigatório\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, errors.tituloItemCardapio && errors.tituloItemCardapio.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"descricaoItemCardapio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"descricaoItemCardapio\",\n    type: \"text\",\n    className: errors.descricaoItemCardapio ? \"form-control is-invalid\" : \"form-control\",\n    id: \"descricaoItemCardapio\",\n    placeholder: \"Descri\\xE7\\xE3o do item\",\n    onChange: handleChange,\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"A descrição é obrigatória\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, errors.descricaoItemCardapio && errors.descricaoItemCardapio.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"valorItemCardapio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, \"Valor\"), /*#__PURE__*/React.createElement(CurrencyInput, {\n    name: \"valorItemCardapio\",\n    type: \"text\",\n    prefix: \"R$\",\n    decimalSeparator: \",\",\n    thousandSeparator: \".\",\n    value: valores.valor,\n    className: errors.valorItemCardapio ? \"form-control is-invalid\" : \"form-control\",\n    id: \"valorItemCardapio\",\n    onChangeEvent: handleChangeValor // ref={register({\n    //     required: {\n    //         value: \"Required\",\n    //         message: \"O valor é obrigatório\"\n    //     },\n    // })}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, errors.valorItemCardapio && errors.valorItemCardapio.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"categoriaItemCardapio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, \"Categoria\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"categoriaItemCardapio\",\n    className: errors.categoriaItemCardapio ? \"form-control is-invalid\" : \"form-control\",\n    id: \"categoriaItemCardapio\",\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"A categoria é obrigatória\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }\n  }, \"Selecione\"), categorias.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: item.id,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 37\n    }\n  }, item.descricao))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }, errors.categoriaItemCardapio && errors.categoriaItemCardapio.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"imagemItemCardapio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }\n  }, \"Imagem do item\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"imagemItemCardapio\",\n    type: \"file\",\n    accept: \".jpg,.png\",\n    className: errors.imagemItemCardapio ? \"form-control-file is-invalid\" : \"form-control-file\",\n    id: \"imagemItemCardapio\",\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"A imagem é obrigatória\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"itemCozinhaCardapio\",\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    id: \"itemCozinhaCardapio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"exampleCheck1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }\n  }, \"Item de cozinha ?\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"isCardapio\",\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    id: \"isCardapio\",\n    defaultChecked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"exampleCheck1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  }, \"Incluir no card\\xE1pio ?\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, \"Cadastrar\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-secondary ml-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, \"Cancelar\")))));\n}","map":{"version":3,"sources":["/home/roberto/Área de Trabalho/tingle-bar/src/pages/PainelEstabelecimento/pages/GerenciarCardapio/ModalCadCardapio.jsx"],"names":["React","useState","useEffect","useForm","CurrencyInput","api","ModalCadCardapio","props","categorias","setCategorias","valores","setValores","register","handleSubmit","errors","setValue","onSubmit","data","console","log","getCategorias","response","get","idEstabelecimento","err","cadastrarItem","dados","post","payload","status","Swal","fire","getMesas","handleChange","event","name","value","target","handleChangeValor","maskedValue","floatValue","valor","tituloItemCardapio","required","message","descricaoItemCardapio","valorItemCardapio","categoriaItemCardapio","map","item","index","id","descricao","imagemItemCardapio"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport CurrencyInput from 'react-currency-input';\n\nimport './styles/ModalCadCardapio.css';\n\nimport api from '../../../../services/api';\n\nexport default function ModalCadCardapio(props) {\n    const [categorias, setCategorias] = useState([]);\n    const [valores, setValores] = useState({});\n\n    const { register, handleSubmit, errors, setValue } = useForm();\n\n    const onSubmit = data => {\n        console.log(data);\n        console.log(valores);\n    };\n\n    useEffect(() => {\n        getCategorias();\n    }, [])\n\n    async function getCategorias() {\n        try {\n            const response = await api.get('/categoria?idEstabelecimento=' + props.idEstabelecimento);\n            setCategorias(response.data);\n            return response.data;\n        } catch (err) {\n            return err.response;\n        }\n    }\n\n    async function cadastrarItem(dados) {\n        // const payload = {\n        //     titulo: dados.tituloItemCardapio,\n        //     descricao: dados.descricaoItemCardapio,\n        //     valor: valores.valor,\n        //     tempo_estimado_min\n        //     tempo_estimado_max\n        //     categoria: dados.categoriaItemCardapio\n        //     iscozinha: \n        //     files: dados.imagemItemCardapio\n        //     estabelecimento: props.idEstabelecimento\n        //     iscardapio\n        // }\n\n        try {\n            const response = await api.post('/Mesa', payload);\n\n            if (response.status === 201 || response.status === 200) {\n                Swal.fire('Sucesso!', 'Mesa cadastrada com sucesso!', 'success')\n                getMesas();\n            }\n        } catch (err) {\n            if (err.response.status === 401 || err.response.status === 400) {\n                Swal.fire('Erro!', 'Falha ao cadastrar mesa', 'error')\n            }\n        }\n    }\n\n    function handleChange(event) {\n        const { name, value } = event.target;\n        setValores({ ...valores, [name]: value });\n    }\n\n    function handleChangeValor(event, maskedValue, floatValue) {\n        setValores({ ...valores, valor: floatValue });\n    }\n\n    return (\n        <div className=\"cad-cardapio-modal\">\n            <div className=\"card card-primary\">\n                <div className=\"card-header\">\n                    <h3 className=\"card-title\">Cadastro de item no Cardápio</h3>\n                </div>\n                {/* /.card-header */}\n                {/* form start */}\n\n                <form autoComplete=\"off\" encType=\"multipart/form-data\" onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"card-body\">\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"tituloItemCardapio\">Título</label>\n                            <input\n                                name=\"tituloItemCardapio\"\n                                type=\"text\"\n                                className={errors.tituloItemCardapio ? \"form-control is-invalid\" : \"form-control\"}\n                                id=\"tituloItemCardapio\"\n                                placeholder=\"Título do item\"\n                                onChange={handleChange}\n                                ref={register({\n                                    required: {\n                                        value: \"Required\",\n                                        message: \"O título é obrigatório\"\n                                    },\n                                })}\n                            />\n                            <span className=\"error invalid-feedback\">{errors.tituloItemCardapio && errors.tituloItemCardapio.message}</span>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"descricaoItemCardapio\">Descrição</label>\n                            <input\n                                name=\"descricaoItemCardapio\"\n                                type=\"text\"\n                                className={errors.descricaoItemCardapio ? \"form-control is-invalid\" : \"form-control\"}\n                                id=\"descricaoItemCardapio\"\n                                placeholder=\"Descrição do item\"\n                                onChange={handleChange}\n                                ref={register({\n                                    required: {\n                                        value: \"Required\",\n                                        message: \"A descrição é obrigatória\"\n                                    },\n                                })}\n                            />\n                            <span className=\"error invalid-feedback\">{errors.descricaoItemCardapio && errors.descricaoItemCardapio.message}</span>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"valorItemCardapio\">Valor</label>\n                            <CurrencyInput\n                                name=\"valorItemCardapio\"\n                                type=\"text\"\n                                prefix=\"R$\"\n                                decimalSeparator=\",\"\n                                thousandSeparator=\".\"\n                                value={valores.valor}\n                                className={errors.valorItemCardapio ? \"form-control is-invalid\" : \"form-control\"}\n                                id=\"valorItemCardapio\"\n                                onChangeEvent={handleChangeValor}\n                            // ref={register({\n                            //     required: {\n                            //         value: \"Required\",\n                            //         message: \"O valor é obrigatório\"\n                            //     },\n                            // })}\n                            />\n                            <span className=\"error invalid-feedback\">{errors.valorItemCardapio && errors.valorItemCardapio.message}</span>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"categoriaItemCardapio\">Categoria</label>\n                            <select\n                                name=\"categoriaItemCardapio\"\n                                className={errors.categoriaItemCardapio ? \"form-control is-invalid\" : \"form-control\"}\n                                id=\"categoriaItemCardapio\"\n                                ref={register({\n                                    required: {\n                                        value: \"Required\",\n                                        message: \"A categoria é obrigatória\"\n                                    },\n                                })}\n                            >\n                                <option value=\"\">Selecione</option>\n\n                                {categorias.map((item, index) => (\n                                    <option key={item.id} value={item.id}>{item.descricao}</option>\n                                ))}\n\n                            </select>\n                            <span className=\"error invalid-feedback\">{errors.categoriaItemCardapio && errors.categoriaItemCardapio.message}</span>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"imagemItemCardapio\">Imagem do item</label>\n                            <input\n                                name=\"imagemItemCardapio\"\n                                type=\"file\"\n                                accept=\".jpg,.png\"\n                                className={errors.imagemItemCardapio ? \"form-control-file is-invalid\" : \"form-control-file\"}\n                                id=\"imagemItemCardapio\"\n                                ref={register({\n                                    required: {\n                                        value: \"Required\",\n                                        message: \"A imagem é obrigatória\"\n                                    },\n                                })}\n                            />\n                        </div>\n\n                        <div className=\"form-check\">\n                            <input\n                                name=\"itemCozinhaCardapio\"\n                                type=\"checkbox\"\n                                className=\"form-check-input\"\n                                id=\"itemCozinhaCardapio\"\n                            />\n                            <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Item de cozinha ?</label>\n                        </div>\n\n                        <div className=\"form-check\">\n                            <input\n                                name=\"isCardapio\"\n                                type=\"checkbox\"\n                                className=\"form-check-input\"\n                                id=\"isCardapio\"\n                                defaultChecked={true}\n                            />\n                            <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Incluir no cardápio ?</label>\n                        </div>\n\n                    </div>\n                    {/* /.card-body */}\n                    <div className=\"card-footer\">\n                        <button type=\"submit\" className=\"btn btn-primary\">Cadastrar</button>\n                        <button type=\"submit\" className=\"btn btn-secondary ml-3\">Cancelar</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}