{"ast":null,"code":"var _jsxFileName = \"/home/roberto/\\xC1rea de Trabalho/tingle-bar/src/pages/PainelEstabelecimento/pages/GerenciarFuncionarios/ListaFuncionarios.jsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport Swal from 'sweetalert2';\nimport { mask } from 'remask';\nimport AuthEstabelecimentoContext from '../../../../contexts/auth-estabelecimento';\nimport GeralContext from '../../../../contexts/geral';\nimport api from '../../../../services/api';\nimport Loading from '../../../../components/Loading';\nexport default function ListaFuncionarios() {\n  const [funcionarios, setFuncionarios] = useState([]);\n  const [estabelecimento, setEstabelecimento] = useState([]);\n  const [tiposFuncionario, setTiposFuncionario] = useState([]);\n  const {\n    isLoadingVisible,\n    setLoadingVisible\n  } = useContext(GeralContext);\n  useEffect(() => {\n    async function loadStoragedData() {\n      const storagedEstabelecimento = localStorage.getItem('@TBAuth:estabelecimento');\n\n      if (storagedEstabelecimento) {\n        setEstabelecimento(JSON.parse(storagedEstabelecimento));\n      }\n    }\n\n    loadStoragedData();\n    getTiposFuncionario();\n  }, []);\n  useEffect(() => {\n    getFuncionarios();\n  }, [estabelecimento]);\n\n  async function getFuncionarios() {\n    try {\n      const response = await api.get('/Funcionario?idEstabelecimento=' + estabelecimento.id_Estabelecimento);\n      setFuncionarios(response.data);\n      return response.data;\n    } catch (err) {\n      return err.response;\n    }\n  }\n\n  async function getTiposFuncionario() {\n    try {\n      const response = await api.get('/tipofuncionario');\n      setTiposFuncionario(response.data);\n      return response.data;\n    } catch (err) {\n      return err.response;\n    }\n  }\n\n  async function getUsuario(cpf) {\n    try {\n      const response = await api.get('/usuario/GetByCpf?Cpf=' + cpf);\n      return response.data;\n    } catch (err) {\n      return err.response;\n    }\n  }\n\n  async function cadastrarFuncionario(idUsuario, idTipoFuncionario) {\n    const payload = {\n      \"id_usuario\": idUsuario,\n      \"id_estabelecimento\": estabelecimento.id_Estabelecimento,\n      \"id_tipofuncionario\": idTipoFuncionario\n    };\n\n    try {\n      const response = await api.post('/Funcionario', payload);\n\n      if (response.status === 201 || response.status === 200) {\n        Swal.fire('Sucesso!', 'Funcionário cadastrado com sucesso!', 'success');\n        getFuncionarios();\n      }\n    } catch (err) {\n      if (err.response.status === 401 || err.response.status === 400) {\n        Swal.fire('Erro!', 'Falha ao cadastrar o funcionário', 'error');\n      }\n    }\n  }\n\n  async function handleCadastrar() {\n    Swal.mixin({\n      input: 'text',\n      confirmButtonText: 'Pesquisar',\n      showCancelButton: true,\n      progressSteps: ['1'],\n      inputValidator: value => {\n        return new Promise(resolve => {\n          if (value) {\n            resolve();\n          } else {\n            resolve('CPF inválido');\n          }\n        });\n      }\n    }).queue([{\n      title: 'Pesquisar Usuário',\n      text: 'Digite o CPF',\n      input: \"text\",\n      inputPlaceholder: \"000.000.000-00\",\n      inputOptions: {\n        onchange: value => value = mask(value, '999.999.999-99')\n      }\n    }]).then(async result => {\n      if (result.value) {\n        try {\n          const cpf = result.value[0];\n          const pesquisaUsuario = await getUsuario(cpf);\n\n          if (pesquisaUsuario.cpf) {\n            const {\n              value\n            } = Swal.fire({\n              title: 'Cadastrar Funcionário',\n              html: `Nome: ${pesquisaUsuario.nome}\n                                    <pre>cpf: ${pesquisaUsuario.cpf}</pre>`,\n              input: 'select',\n              inputOptions: tiposFuncionario.map(item => item.descricao),\n              inputPlaceholder: 'Selecione a função',\n              confirmButtonText: 'Cadastrar',\n              showCancelButton: true,\n              inputValidator: value => {\n                return new Promise(resolve => {\n                  if (value) resolve();else resolve('Você precisa selecionar uma função');\n                });\n              }\n            }).then(result => {\n              const idTipoFuncionario = tiposFuncionario[result.value].id;\n              cadastrarFuncionario(pesquisaUsuario.id, idTipoFuncionario);\n            });\n          } else {\n            Swal.fire('CPF não localizado', 'Tente novamente', 'error');\n          }\n        } catch (err) {\n          Swal.fire('CPF não localizado', 'Tente novamente', 'error');\n        }\n      }\n    });\n  }\n\n  async function deletarFuncionario(item) {\n    Swal.fire({\n      title: 'Deseja deletar o funcionário?',\n      text: \"Após deletar não será possivel recuperar!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#d33',\n      cancelButtonColor: '#3085d6',\n      confirmButtonText: 'Deletar'\n    }).then(async result => {\n      if (result.value) {\n        try {\n          const response = await api.delete('/Funcionario/' + item.id_funcionario);\n\n          if (response.status === 201 || response.status === 200) {\n            Swal.fire('Sucesso!', 'Funcionário deletado com sucesso!', 'success');\n            getFuncionarios();\n          }\n        } catch (err) {\n          if (err.response.status === 401 || err.response.status === 400) {\n            Swal.fire('Erro!', 'Falha ao deletar o funcionário', 'error');\n          }\n        }\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"content-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }, \"Funcion\\xE1rios\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"breadcrumb float-sm-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 65\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 33\n    }\n  }, \"Funcion\\xE1rios\")))))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  }, \"Lista de funcion\\xE1rios\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-tools\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success btn-sm\",\n    onClick: handleCadastrar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user-plus mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 37\n    }\n  }), \"Novo\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped projects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: '10%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 41\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: '40%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 41\n    }\n  }, \"Nome\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: '20%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 41\n    }\n  }, \"Tipo\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: '30%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 33\n    }\n  }, funcionarios.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: item.id_funcionario,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      name: \"idFuncionario\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 45\n      }\n    }, item.id_funcionario), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 49\n      }\n    }, item.nome), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 49\n      }\n    }, item.descricao)), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"project-actions text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      disabled: true,\n      className: \"btn btn-primary btn-sm ml-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-eye mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 53\n      }\n    }), \"Visualizar\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger btn-sm ml-3\",\n      onClick: () => deletarFuncionario(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-trash mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 53\n      }\n    }), \"Deletar\")));\n  }))))))), isLoadingVisible ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 33\n    }\n  }) : null);\n}","map":{"version":3,"sources":["/home/roberto/Área de Trabalho/tingle-bar/src/pages/PainelEstabelecimento/pages/GerenciarFuncionarios/ListaFuncionarios.jsx"],"names":["React","useState","useEffect","useContext","Swal","mask","AuthEstabelecimentoContext","GeralContext","api","Loading","ListaFuncionarios","funcionarios","setFuncionarios","estabelecimento","setEstabelecimento","tiposFuncionario","setTiposFuncionario","isLoadingVisible","setLoadingVisible","loadStoragedData","storagedEstabelecimento","localStorage","getItem","JSON","parse","getTiposFuncionario","getFuncionarios","response","get","id_Estabelecimento","data","err","getUsuario","cpf","cadastrarFuncionario","idUsuario","idTipoFuncionario","payload","post","status","fire","handleCadastrar","mixin","input","confirmButtonText","showCancelButton","progressSteps","inputValidator","value","Promise","resolve","queue","title","text","inputPlaceholder","inputOptions","onchange","then","result","pesquisaUsuario","html","nome","map","item","descricao","id","deletarFuncionario","icon","confirmButtonColor","cancelButtonColor","delete","id_funcionario","width","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport Swal from 'sweetalert2';\nimport { mask } from 'remask';\n\nimport AuthEstabelecimentoContext from '../../../../contexts/auth-estabelecimento';\nimport GeralContext from '../../../../contexts/geral';\n\nimport api from '../../../../services/api';\nimport Loading from '../../../../components/Loading';\n\nexport default function ListaFuncionarios() {\n    const [funcionarios, setFuncionarios] = useState([]);\n    const [estabelecimento, setEstabelecimento] = useState([]);\n    const [tiposFuncionario, setTiposFuncionario] = useState([]);\n    const { isLoadingVisible, setLoadingVisible } = useContext(GeralContext);\n\n    useEffect(() => {\n        async function loadStoragedData() {\n            const storagedEstabelecimento = localStorage.getItem('@TBAuth:estabelecimento');\n\n            if (storagedEstabelecimento) {\n                setEstabelecimento(JSON.parse(storagedEstabelecimento));\n            }\n        }\n\n        loadStoragedData();\n        getTiposFuncionario();\n    }, []);\n\n    useEffect(() => {\n        getFuncionarios();\n    }, [estabelecimento]);\n\n    async function getFuncionarios() {\n        try {\n            const response = await api.get('/Funcionario?idEstabelecimento=' + estabelecimento.id_Estabelecimento);\n            setFuncionarios(response.data);\n            return response.data;\n        } catch (err) {\n            return err.response;\n        }\n    }\n\n    async function getTiposFuncionario() {\n        try {\n            const response = await api.get('/tipofuncionario');\n            setTiposFuncionario(response.data);\n            return response.data;\n        } catch (err) {\n            return err.response;\n        }\n    }\n\n    async function getUsuario(cpf) {\n        try {\n            const response = await api.get('/usuario/GetByCpf?Cpf=' + cpf);\n            return response.data;\n        } catch (err) {\n            return err.response;\n        }\n    }\n\n    async function cadastrarFuncionario(idUsuario, idTipoFuncionario) {\n        const payload = {\n            \"id_usuario\": idUsuario,\n            \"id_estabelecimento\": estabelecimento.id_Estabelecimento,\n            \"id_tipofuncionario\": idTipoFuncionario\n        }\n\n        try {\n            const response = await api.post('/Funcionario', payload);\n\n            if (response.status === 201 || response.status === 200) {\n                Swal.fire('Sucesso!', 'Funcionário cadastrado com sucesso!', 'success');\n                getFuncionarios();\n            }\n\n        } catch (err) {\n            if (err.response.status === 401 || err.response.status === 400) {\n                Swal.fire('Erro!', 'Falha ao cadastrar o funcionário', 'error')\n            }\n        }\n    }\n\n    async function handleCadastrar() {\n        Swal.mixin({\n            input: 'text',\n            confirmButtonText: 'Pesquisar',\n            showCancelButton: true,\n            progressSteps: ['1'],\n            inputValidator: value => {\n                return new Promise(resolve => {\n                    if (value) {\n                        resolve()\n                    } else {\n                        resolve('CPF inválido');\n                    }\n                });\n            }\n        }).queue([\n            {\n                title: 'Pesquisar Usuário',\n                text: 'Digite o CPF',\n                input: \"text\",\n                inputPlaceholder: \"000.000.000-00\",\n                inputOptions: {\n                    onchange: value => value = mask(value, '999.999.999-99')\n                }\n            }\n        ]).then(async result => {\n            if (result.value) {\n                try {\n                    const cpf = (result.value[0])\n                    const pesquisaUsuario = await getUsuario(cpf);\n\n                    if (pesquisaUsuario.cpf) {\n                        const { value } = Swal.fire({\n                            title: 'Cadastrar Funcionário',\n                            html: `Nome: ${pesquisaUsuario.nome}\n                                    <pre>cpf: ${pesquisaUsuario.cpf}</pre>`,\n                            input: 'select',\n                            inputOptions: tiposFuncionario.map(item => item.descricao),\n                            inputPlaceholder: 'Selecione a função',\n                            confirmButtonText: 'Cadastrar',\n                            showCancelButton: true,\n                            inputValidator: (value) => {\n                                return new Promise((resolve) => {\n                                    if (value)\n                                        resolve()\n                                    else\n                                        resolve('Você precisa selecionar uma função');\n                                });\n                            }\n                        }).then(result => {\n                            const idTipoFuncionario = tiposFuncionario[result.value].id;\n                            cadastrarFuncionario(pesquisaUsuario.id, idTipoFuncionario);\n                        });\n                    } else {\n                        Swal.fire('CPF não localizado', 'Tente novamente', 'error');\n                    }\n                } catch (err) {\n                    Swal.fire('CPF não localizado', 'Tente novamente', 'error');\n                }\n            }\n        });\n    }\n\n    async function deletarFuncionario(item) {\n        Swal.fire({\n            title: 'Deseja deletar o funcionário?',\n            text: \"Após deletar não será possivel recuperar!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#d33',\n            cancelButtonColor: '#3085d6',\n            confirmButtonText: 'Deletar'\n        }).then(async result => {\n            if (result.value) {\n                try {\n                    const response = await api.delete('/Funcionario/' + item.id_funcionario);\n\n                    if (response.status === 201 || response.status === 200) {\n                        Swal.fire('Sucesso!', 'Funcionário deletado com sucesso!', 'success');\n                        getFuncionarios();\n                    }\n                } catch (err) {\n                    if (err.response.status === 401 || err.response.status === 400) {\n                        Swal.fire('Erro!', 'Falha ao deletar o funcionário', 'error');\n                    }\n                }\n            }\n        })\n    }\n\n    return (\n        <div className=\"content-wrapper\">\n\n            {/* Content Header (Page header) */}\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>Funcionários</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\n                                <li className=\"breadcrumb-item active\">Funcionários</li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>{/* /.container-fluid */}\n            </section>\n\n            {/* Main content */}\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h3 className=\"card-title\">Lista de funcionários</h3>\n                            <div className=\"card-tools\">\n                                <button className=\"btn btn-success btn-sm\" onClick={handleCadastrar}>\n                                    <i className=\"fas fa-user-plus mr-2\"></i>\n                                                    Novo\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"card-body p-0\">\n                            <table className=\"table table-striped projects\">\n                                <thead>\n                                    <tr>\n                                        <th style={{ width: '10%' }}>\n                                            ID\n                                        </th>\n                                        <th style={{ width: '40%' }}>\n                                            Nome\n                                        </th>\n                                        <th style={{ width: '20%' }}>\n                                            Tipo\n                                        </th>\n                                        <th style={{ width: '30%' }}>\n                                        </th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n\n                                    {funcionarios.map((item, index) => {\n                                        return <tr key={item.id_funcionario}>\n                                            <td name=\"idFuncionario\">{item.id_funcionario}</td>\n                                            <td>\n                                                <a>{item.nome}</a>\n                                                <br />\n                                                {/* <small>Created 01.01.2019</small> */}\n                                            </td>\n                                            <td>\n                                                <a>{item.descricao}</a>\n                                            </td>\n\n                                            <td className=\"project-actions text-right\">\n                                                <button disabled className=\"btn btn-primary btn-sm ml-3\">\n                                                    <i className=\"fas fa-eye mr-2\"></i>\n                                                    Visualizar\n                                                </button>\n                                                <button className=\"btn btn-danger btn-sm ml-3\" onClick={() => deletarFuncionario(item)}>\n                                                    <i className=\"fas fa-trash mr-2\"></i>\n                                                    Deletar\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    })}\n\n                                </tbody>\n                            </table>\n                        </div>\n                        {/* /.card-body */}\n\n                    </div>\n\n                </div>\n            </section>\n            {/* /.content */}\n            {isLoadingVisible ? <Loading /> : null}\n\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}