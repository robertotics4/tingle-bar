{"ast":null,"code":"var _jsxFileName = \"/home/roberto/\\xC1rea de Trabalho/tingle-bar/src/pages/LoginEstabelecimento/index.jsx\";\nimport React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport api from '../../services/api';\nexport default function LoginEstabelecimento() {\n  const [valores, setValores] = useState({});\n  const [isLoadingVisible, setLoadingVisible] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm();\n\n  const onSubmit = data => {\n    setValores(data);\n    console.log(valores);\n  };\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setValores({ ...valores,\n      [name]: value\n    });\n  }\n\n  async function loginEstabelecimento() {\n    setLoadingVisible(true);\n    let resposta = null;\n    const payload = {\n      \"Nome\": valores.nome,\n      \"Cnpj\": valores.cnpj,\n      \"Endereco\": valores.endereco,\n      \"Numero\": valores.numero,\n      \"Latitude\": valores.latitude,\n      \"Longitude\": valores.longitude,\n      \"IdTipoEstabelecimento\": valores.tipoEstabelecimento,\n      \"Imagem\": \"/uploads/default.png\",\n      \"Distancia_km\": \"0\",\n      \"Senha\": valores.senha\n    };\n\n    try {\n      resposta = await api.post('/api/estabelecimento', payload);\n\n      if (resposta.status === 200 || resposta.status === 201) {\n        Swal.fire({\n          title: 'Sucesso!',\n          text: 'Cadastro efetuado com sucesso!',\n          icon: 'success',\n          confirmButtonText: 'OK'\n        });\n        setValores({});\n      }\n    } catch (err) {\n      Swal.fire({\n        title: 'Erro!',\n        text: 'Falha ao efetuar cadastro.',\n        icon: 'error',\n        confirmButtonText: 'Voltar'\n      });\n    } finally {\n      setLoadingVisible(false);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hold-transition login-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"../../index2.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 49\n    }\n  }, \"Tingle\"), \"Bar\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body login-card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"login-box-msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, \"Insira suas credenciais para iniciar\"), /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: errors.cnpj ? \"form-control is-invalid\" : \"form-control\",\n    placeholder: \"CNPJ\",\n    name: \"cnpj\",\n    onChange: handleChange,\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"O CNPJ é obrigatório\"\n      },\n      pattern: {\n        value: /^\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}-\\d{2}$/,\n        message: \"CNPJ inválido\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, errors.cnpj && errors.cnpj.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: errors.senha ? \"form-control is-invalid\" : \"form-control\",\n    placeholder: \"Senha\",\n    name: \"senha\",\n    onChange: handleChange,\n    ref: register({\n      required: {\n        value: \"Required\",\n        message: \"A senha é obrigatória\"\n      },\n      pattern: {\n        value: /(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n        // Mínimo de oito caracteres, pelo menos uma letra e um número\n        message: \"Mínimo de oito caracteres, com pelo menos uma letra e um número\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fas fa-lock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, errors.senha && errors.senha.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-3 col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }, \"Acessar\")))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"forgot-password.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, \"Esqueci minha senha\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"register.html\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, \"Cadastrar um novo estabelecimento\"))))));\n}","map":{"version":3,"sources":["/home/roberto/Área de Trabalho/tingle-bar/src/pages/LoginEstabelecimento/index.jsx"],"names":["React","useState","useForm","api","LoginEstabelecimento","valores","setValores","isLoadingVisible","setLoadingVisible","register","handleSubmit","errors","watch","onSubmit","data","console","log","handleChange","event","name","value","target","loginEstabelecimento","resposta","payload","nome","cnpj","endereco","numero","latitude","longitude","tipoEstabelecimento","senha","post","status","Swal","fire","title","text","icon","confirmButtonText","err","required","message","pattern"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\n\nimport api from '../../services/api';\n\nexport default function LoginEstabelecimento() {\n    const [valores, setValores] = useState({});\n    const [isLoadingVisible, setLoadingVisible] = useState(false);\n\n    const { register, handleSubmit, errors, watch } = useForm();\n\n    const onSubmit = data => {\n        setValores(data);\n        console.log(valores);\n    };\n\n    function handleChange(event) {\n        const { name, value } = event.target;\n        setValores({ ...valores, [name]: value });\n    }\n\n    async function loginEstabelecimento() {\n        setLoadingVisible(true);\n        let resposta = null;\n\n        const payload = {\n            \"Nome\": valores.nome,\n            \"Cnpj\": valores.cnpj,\n            \"Endereco\": valores.endereco,\n            \"Numero\": valores.numero,\n            \"Latitude\": valores.latitude,\n            \"Longitude\": valores.longitude,\n            \"IdTipoEstabelecimento\": valores.tipoEstabelecimento,\n            \"Imagem\": \"/uploads/default.png\",\n            \"Distancia_km\": \"0\",\n            \"Senha\": valores.senha\n        }\n\n        try {\n            resposta = await api.post('/api/estabelecimento', payload);\n\n            if (resposta.status === 200 || resposta.status === 201) {\n                Swal.fire({\n                    title: 'Sucesso!',\n                    text: 'Cadastro efetuado com sucesso!',\n                    icon: 'success',\n                    confirmButtonText: 'OK'\n                });\n\n                setValores({});\n            }\n\n        } catch (err) {\n            Swal.fire({\n                title: 'Erro!',\n                text: 'Falha ao efetuar cadastro.',\n                icon: 'error',\n                confirmButtonText: 'Voltar'\n            });\n        } finally {\n            setLoadingVisible(false);\n        }\n    }\n\n    return (\n        <div className=\"hold-transition login-page\">\n            <div className=\"login-box\">\n                <div className=\"login-logo\">\n                    <a href=\"../../index2.html\"><b>Tingle</b>Bar</a>\n                </div>\n                {/* /.login-logo */}\n                <div className=\"card\">\n                    <div className=\"card-body login-card-body\">\n                        <p className=\"login-box-msg\">Insira suas credenciais para iniciar</p>\n\n                        <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    type=\"text\"\n                                    className={errors.cnpj ? \"form-control is-invalid\" : \"form-control\"}\n                                    placeholder=\"CNPJ\"\n                                    name=\"cnpj\"\n                                    onChange={handleChange}\n                                    ref={register({\n                                        required: {\n                                            value: \"Required\",\n                                            message: \"O CNPJ é obrigatório\"\n                                        },\n                                        pattern: {\n                                            value: /^\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}-\\d{2}$/,\n                                            message: \"CNPJ inválido\"\n                                        }\n                                    })}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-user\" />\n                                    </div>\n                                </div>\n                                <span className=\"error invalid-feedback\">{errors.cnpj && errors.cnpj.message}</span>\n                            </div>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    type=\"password\"\n                                    className={errors.senha ? \"form-control is-invalid\" : \"form-control\"}\n                                    placeholder=\"Senha\"\n                                    name=\"senha\"\n                                    onChange={handleChange}\n                                    ref={register({\n                                        required: {\n                                            value: \"Required\",\n                                            message: \"A senha é obrigatória\"\n                                        },\n                                        pattern: {\n                                            value: /(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, // Mínimo de oito caracteres, pelo menos uma letra e um número\n                                            message: \"Mínimo de oito caracteres, com pelo menos uma letra e um número\"\n                                        }\n                                    })}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-lock\" />\n                                    </div>\n                                </div>\n                                <span className=\"error invalid-feedback\">{errors.senha && errors.senha.message}</span>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"input-group mb-3 col-md-12\">\n                                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Acessar</button>\n                                </div>\n                                {/* /.col */}\n                            </div>\n                        </form>\n\n                        <p className=\"mb-1\">\n                            <a href=\"forgot-password.html\">Esqueci minha senha</a>\n                        </p>\n                        <p className=\"mb-0\">\n                            <a href=\"register.html\" className=\"text-center\">Cadastrar um novo estabelecimento</a>\n                        </p>\n                    </div>\n                    {/* /.login-card-body */}\n                </div>\n            </div>\n            {/* /.login-box */}\n        </div>\n\n    );\n}"]},"metadata":{},"sourceType":"module"}